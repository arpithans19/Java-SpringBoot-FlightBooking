2022-09-12 09:35:18 - Starting UserApplication using Java 11.0.12 on inlen8520018489 with PID 33100 (C:\Users\ASHAIK31\FlightBookingSystem\user\target\classes started by ashaik31 in C:\Users\ASHAIK31\FlightBookingSystem\service-discovery)
2022-09-12 09:35:18 - No active profile set, falling back to 1 default profile: "default"
2022-09-12 09:35:18 - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2022-09-12 09:35:19 - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-09-12 09:35:20 - Finished Spring Data repository scanning in 271 ms. Found 0 Reactive MongoDB repository interfaces.
2022-09-12 09:35:20 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-09-12 09:35:20 - Finished Spring Data repository scanning in 32 ms. Found 1 MongoDB repository interfaces.
2022-09-12 09:35:20 - BeanFactory id=7ed4f8b9-a8c6-39d2-94db-960c140b4cec
2022-09-12 09:35:22 - Tomcat initialized with port(s): 8000 (http)
2022-09-12 09:35:22 - Starting service [Tomcat]
2022-09-12 09:35:22 - Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-12 09:35:22 - Initializing Spring embedded WebApplicationContext
2022-09-12 09:35:22 - Root WebApplicationContext: initialization completed in 4119 ms
2022-09-12 09:35:22 - No URLs will be polled as dynamic configuration sources.
2022-09-12 09:35:22 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-12 09:35:22 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7db791df
2022-09-12 09:35:22 - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2022-09-12 09:35:23 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@5ad40184], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3359c3f6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@3d3b272a], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-12 09:35:23 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-12 09:35:23 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-12 09:35:24 - No URLs will be polled as dynamic configuration sources.
2022-09-12 09:35:24 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-12 09:35:25 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:180)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:193)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.waitForConnect(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:609)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:107)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 4 common frames omitted
2022-09-12 09:35:26 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@5ad40184], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3359c3f6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@3d3b272a], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-12 09:35:26 - Eureka HTTP Client uses RestTemplate.
2022-09-12 09:35:27 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-09-12 09:35:27 - Exposing 1 endpoint(s) beneath base path '/actuator'
2022-09-12 09:35:27 - Setting initial instance status as: STARTING
2022-09-12 09:35:27 - Initializing Eureka in region us-east-1
2022-09-12 09:35:27 - Resolving eureka endpoints via configuration
2022-09-12 09:35:27 - Disable delta property : false
2022-09-12 09:35:27 - Single vip registry refresh property : null
2022-09-12 09:35:27 - Force full registry fetch : false
2022-09-12 09:35:27 - Application is null : false
2022-09-12 09:35:27 - Registered Applications size is zero : true
2022-09-12 09:35:27 - Application version is -1: true
2022-09-12 09:35:27 - Getting all instance registry info from the eureka server
2022-09-12 09:35:28 - The response status is 200
2022-09-12 09:35:28 - Starting heartbeat executor: renew interval is: 30
2022-09-12 09:35:28 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-09-12 09:35:28 - Discovery Client initialized at timestamp 1662955528878 with initial instances count: 0
2022-09-12 09:35:28 - Registering application USER-SERVICE with eureka with status UP
2022-09-12 09:35:28 - Saw local status change event StatusChangeEvent [timestamp=1662955528888, current=UP, previous=STARTING]
2022-09-12 09:35:28 - DiscoveryClient_USER-SERVICE/inlen8520018489.corp.capgemini.com:user-service:8000: registering service...
2022-09-12 09:35:28 - Tomcat started on port(s): 8000 (http) with context path ''
2022-09-12 09:35:28 - Updating port to 8000
2022-09-12 09:35:29 - DiscoveryClient_USER-SERVICE/inlen8520018489.corp.capgemini.com:user-service:8000 - registration status: 204
2022-09-12 09:35:29 - Started UserApplication in 12.915 seconds (JVM running for 14.078)
2022-09-12 09:35:30 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.AsynchronousSocketChannelStream$OpenCompletionHandler.failed(AsynchronousSocketChannelStream.java:124)
	at java.base/sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:129)
	at java.base/sun.nio.ch.Invoker.invokeDirect(Invoker.java:158)
	at java.base/sun.nio.ch.Invoker.invoke(Invoker.java:186)
	at java.base/sun.nio.ch.Invoker.invoke(Invoker.java:298)
	at java.base/sun.nio.ch.WindowsAsynchronousSocketChannelImpl$ConnectTask.failed(WindowsAsynchronousSocketChannelImpl.java:308)
	at java.base/sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:389)
	at java.base/sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.io.IOException: The remote computer refused the network connection.

	at java.base/sun.nio.ch.Iocp.translateErrorToIOException(Iocp.java:299)
	... 5 common frames omitted
2022-09-12 09:35:58 - Disable delta property : false
2022-09-12 09:35:58 - Single vip registry refresh property : null
2022-09-12 09:35:58 - Force full registry fetch : false
2022-09-12 09:35:58 - Application is null : false
2022-09-12 09:35:58 - Registered Applications size is zero : true
2022-09-12 09:35:58 - Application version is -1: false
2022-09-12 09:35:58 - Getting all instance registry info from the eureka server
2022-09-12 09:35:58 - The response status is 200
2022-09-12 09:40:27 - Resolving eureka endpoints via configuration
2022-09-12 09:45:27 - Resolving eureka endpoints via configuration
2022-09-12 09:50:27 - Resolving eureka endpoints via configuration
2022-09-12 09:55:27 - Resolving eureka endpoints via configuration
2022-09-12 10:00:27 - Resolving eureka endpoints via configuration
2022-09-12 10:02:54 - Opened connection [connectionId{localValue:509, serverValue:2}] to localhost:27017
2022-09-12 10:02:54 - Opened connection [connectionId{localValue:510, serverValue:3}] to localhost:27017
2022-09-12 10:02:54 - Opened connection [connectionId{localValue:511, serverValue:4}] to localhost:27017
2022-09-12 10:02:54 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=6003000}
2022-09-12 10:02:54 - Opened connection [connectionId{localValue:512, serverValue:5}] to localhost:27017
2022-09-12 10:02:54 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4337100}
2022-09-12 10:03:07 - Starting UserApplication using Java 11.0.12 on inlen8520018489 with PID 5008 (C:\Users\ASHAIK31\FlightBookingSystem\user\target\classes started by ashaik31 in C:\Users\ASHAIK31\FlightBookingSystem\service-discovery)
2022-09-12 10:03:07 - No active profile set, falling back to 1 default profile: "default"
2022-09-12 10:03:07 - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2022-09-12 10:03:08 - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-09-12 10:03:09 - Finished Spring Data repository scanning in 298 ms. Found 0 Reactive MongoDB repository interfaces.
2022-09-12 10:03:09 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-09-12 10:03:09 - Finished Spring Data repository scanning in 44 ms. Found 1 MongoDB repository interfaces.
2022-09-12 10:03:09 - BeanFactory id=7ed4f8b9-a8c6-39d2-94db-960c140b4cec
2022-09-12 10:03:11 - Tomcat initialized with port(s): 8000 (http)
2022-09-12 10:03:11 - Starting service [Tomcat]
2022-09-12 10:03:11 - Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-12 10:03:11 - Initializing Spring embedded WebApplicationContext
2022-09-12 10:03:11 - Root WebApplicationContext: initialization completed in 4435 ms
2022-09-12 10:03:11 - No URLs will be polled as dynamic configuration sources.
2022-09-12 10:03:11 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-12 10:03:11 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@e162a35
2022-09-12 10:03:12 - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2022-09-12 10:03:12 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@2dde0a34], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@61836cd9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@1b632442], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-12 10:03:12 - Opened connection [connectionId{localValue:2, serverValue:7}] to localhost:27017
2022-09-12 10:03:12 - Opened connection [connectionId{localValue:1, serverValue:6}] to localhost:27017
2022-09-12 10:03:12 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=39836500}
2022-09-12 10:03:12 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-12 10:03:13 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-12 10:03:13 - No URLs will be polled as dynamic configuration sources.
2022-09-12 10:03:13 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-12 10:03:15 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@2dde0a34], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@61836cd9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@1b632442], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-12 10:03:16 - Opened connection [connectionId{localValue:3, serverValue:8}] to localhost:27017
2022-09-12 10:03:16 - Opened connection [connectionId{localValue:4, serverValue:9}] to localhost:27017
2022-09-12 10:03:16 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=10529100}
2022-09-12 10:03:16 - Eureka HTTP Client uses RestTemplate.
2022-09-12 10:03:17 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-09-12 10:03:17 - Exposing 1 endpoint(s) beneath base path '/actuator'
2022-09-12 10:03:17 - Setting initial instance status as: STARTING
2022-09-12 10:03:17 - Initializing Eureka in region us-east-1
2022-09-12 10:03:17 - Resolving eureka endpoints via configuration
2022-09-12 10:03:17 - Disable delta property : false
2022-09-12 10:03:17 - Single vip registry refresh property : null
2022-09-12 10:03:17 - Force full registry fetch : false
2022-09-12 10:03:17 - Application is null : false
2022-09-12 10:03:17 - Registered Applications size is zero : true
2022-09-12 10:03:17 - Application version is -1: true
2022-09-12 10:03:17 - Getting all instance registry info from the eureka server
2022-09-12 10:03:18 - The response status is 200
2022-09-12 10:03:18 - Starting heartbeat executor: renew interval is: 30
2022-09-12 10:03:18 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-09-12 10:03:18 - Discovery Client initialized at timestamp 1662957198316 with initial instances count: 1
2022-09-12 10:03:18 - Registering application USER-SERVICE with eureka with status UP
2022-09-12 10:03:18 - Saw local status change event StatusChangeEvent [timestamp=1662957198325, current=UP, previous=STARTING]
2022-09-12 10:03:18 - DiscoveryClient_USER-SERVICE/inlen8520018489.corp.capgemini.com:user-service:8000: registering service...
2022-09-12 10:03:18 - Tomcat started on port(s): 8000 (http) with context path ''
2022-09-12 10:03:18 - Updating port to 8000
2022-09-12 10:03:18 - DiscoveryClient_USER-SERVICE/inlen8520018489.corp.capgemini.com:user-service:8000 - registration status: 204
2022-09-12 10:03:18 - Started UserApplication in 13.378 seconds (JVM running for 14.517)
2022-09-12 10:04:22 - Starting UserApplication using Java 11.0.12 on inlen8520018489 with PID 25200 (C:\Users\ASHAIK31\FlightBookingSystem\user\target\classes started by ashaik31 in C:\Users\ASHAIK31\FlightBookingSystem\service-discovery)
2022-09-12 10:04:22 - No active profile set, falling back to 1 default profile: "default"
2022-09-12 10:04:23 - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2022-09-12 10:04:24 - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-09-12 10:04:25 - Finished Spring Data repository scanning in 296 ms. Found 0 Reactive MongoDB repository interfaces.
2022-09-12 10:04:25 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-09-12 10:04:25 - Finished Spring Data repository scanning in 40 ms. Found 1 MongoDB repository interfaces.
2022-09-12 10:04:25 - BeanFactory id=7ed4f8b9-a8c6-39d2-94db-960c140b4cec
2022-09-12 10:04:26 - Tomcat initialized with port(s): 8000 (http)
2022-09-12 10:04:26 - Starting service [Tomcat]
2022-09-12 10:04:26 - Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-12 10:04:27 - Initializing Spring embedded WebApplicationContext
2022-09-12 10:04:27 - Root WebApplicationContext: initialization completed in 4425 ms
2022-09-12 10:04:27 - No URLs will be polled as dynamic configuration sources.
2022-09-12 10:04:27 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-12 10:04:27 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1d77746b
2022-09-12 10:04:27 - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2022-09-12 10:04:28 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@24de63b], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@42d0e41]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@50f05307], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-12 10:04:28 - Opened connection [connectionId{localValue:1, serverValue:11}] to localhost:27017
2022-09-12 10:04:28 - Opened connection [connectionId{localValue:2, serverValue:10}] to localhost:27017
2022-09-12 10:04:28 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=38881500}
2022-09-12 10:04:28 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-12 10:04:28 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-12 10:04:29 - No URLs will be polled as dynamic configuration sources.
2022-09-12 10:04:29 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-12 10:04:31 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@24de63b], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@42d0e41]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@50f05307], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-12 10:04:31 - Opened connection [connectionId{localValue:4, serverValue:13}] to localhost:27017
2022-09-12 10:04:31 - Opened connection [connectionId{localValue:3, serverValue:12}] to localhost:27017
2022-09-12 10:04:31 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=11459200}
2022-09-12 10:04:31 - Eureka HTTP Client uses RestTemplate.
2022-09-12 10:04:32 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-09-12 10:04:32 - Exposing 1 endpoint(s) beneath base path '/actuator'
2022-09-12 10:04:32 - Setting initial instance status as: STARTING
2022-09-12 10:04:32 - Initializing Eureka in region us-east-1
2022-09-12 10:04:32 - Resolving eureka endpoints via configuration
2022-09-12 10:04:32 - Disable delta property : false
2022-09-12 10:04:32 - Single vip registry refresh property : null
2022-09-12 10:04:32 - Force full registry fetch : false
2022-09-12 10:04:32 - Application is null : false
2022-09-12 10:04:32 - Registered Applications size is zero : true
2022-09-12 10:04:32 - Application version is -1: true
2022-09-12 10:04:32 - Getting all instance registry info from the eureka server
2022-09-12 10:04:33 - The response status is 200
2022-09-12 10:04:33 - Starting heartbeat executor: renew interval is: 30
2022-09-12 10:04:33 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-09-12 10:04:33 - Discovery Client initialized at timestamp 1662957273591 with initial instances count: 1
2022-09-12 10:04:33 - Registering application USER-SERVICE with eureka with status UP
2022-09-12 10:04:33 - Saw local status change event StatusChangeEvent [timestamp=1662957273598, current=UP, previous=STARTING]
2022-09-12 10:04:33 - DiscoveryClient_USER-SERVICE/inlen8520018489.corp.capgemini.com:user-service:8000: registering service...
2022-09-12 10:04:33 - Tomcat started on port(s): 8000 (http) with context path ''
2022-09-12 10:04:33 - Updating port to 8000
2022-09-12 10:04:33 - DiscoveryClient_USER-SERVICE/inlen8520018489.corp.capgemini.com:user-service:8000 - registration status: 204
2022-09-12 10:04:34 - Started UserApplication in 13.029 seconds (JVM running for 14.299)
2022-09-12 10:09:32 - Resolving eureka endpoints via configuration
2022-09-12 10:14:32 - Resolving eureka endpoints via configuration
2022-09-12 10:19:32 - Resolving eureka endpoints via configuration
2022-09-12 10:24:32 - Resolving eureka endpoints via configuration
2022-09-12 10:29:32 - Resolving eureka endpoints via configuration
2022-09-12 10:32:27 - Starting FlightApplication using Java 11.0.12 on inlen8520018489 with PID 30708 (C:\Users\ASHAIK31\FlightBookingSystem\flight\target\classes started by ashaik31 in C:\Users\ASHAIK31\FlightBookingSystem\service-discovery)
2022-09-12 10:32:27 - No active profile set, falling back to 1 default profile: "default"
2022-09-12 10:32:28 - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2022-09-12 10:32:29 - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-09-12 10:32:29 - Finished Spring Data repository scanning in 305 ms. Found 0 Reactive MongoDB repository interfaces.
2022-09-12 10:32:29 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-09-12 10:32:29 - Finished Spring Data repository scanning in 35 ms. Found 1 MongoDB repository interfaces.
2022-09-12 10:32:30 - BeanFactory id=76207517-9e5e-3bce-8411-f105bcee2839
2022-09-12 10:32:31 - Tomcat initialized with port(s): 8001 (http)
2022-09-12 10:32:31 - Starting service [Tomcat]
2022-09-12 10:32:31 - Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-12 10:32:31 - Initializing Spring embedded WebApplicationContext
2022-09-12 10:32:31 - Root WebApplicationContext: initialization completed in 4102 ms
2022-09-12 10:32:32 - No URLs will be polled as dynamic configuration sources.
2022-09-12 10:32:32 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-12 10:32:32 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@734a149a
2022-09-12 10:32:32 - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2022-09-12 10:32:32 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@1c53bd49], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@16949dfa]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@d6d683e], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-12 10:32:32 - Opened connection [connectionId{localValue:2, serverValue:15}] to localhost:27017
2022-09-12 10:32:32 - Opened connection [connectionId{localValue:1, serverValue:14}] to localhost:27017
2022-09-12 10:32:32 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=39515700}
2022-09-12 10:32:32 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-12 10:32:33 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-12 10:32:33 - No URLs will be polled as dynamic configuration sources.
2022-09-12 10:32:33 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-12 10:32:35 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@1c53bd49], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@16949dfa]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@d6d683e], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-12 10:32:35 - Opened connection [connectionId{localValue:4, serverValue:17}] to localhost:27017
2022-09-12 10:32:35 - Opened connection [connectionId{localValue:3, serverValue:16}] to localhost:27017
2022-09-12 10:32:35 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=8964000}
2022-09-12 10:32:36 - Eureka HTTP Client uses RestTemplate.
2022-09-12 10:32:37 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-09-12 10:32:37 - Exposing 1 endpoint(s) beneath base path '/actuator'
2022-09-12 10:32:37 - Setting initial instance status as: STARTING
2022-09-12 10:32:37 - Initializing Eureka in region us-east-1
2022-09-12 10:32:37 - Resolving eureka endpoints via configuration
2022-09-12 10:32:37 - Disable delta property : false
2022-09-12 10:32:37 - Single vip registry refresh property : null
2022-09-12 10:32:37 - Force full registry fetch : false
2022-09-12 10:32:37 - Application is null : false
2022-09-12 10:32:37 - Registered Applications size is zero : true
2022-09-12 10:32:37 - Application version is -1: true
2022-09-12 10:32:37 - Getting all instance registry info from the eureka server
2022-09-12 10:32:38 - The response status is 200
2022-09-12 10:32:38 - Starting heartbeat executor: renew interval is: 30
2022-09-12 10:32:38 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-09-12 10:32:38 - Discovery Client initialized at timestamp 1662958958147 with initial instances count: 1
2022-09-12 10:32:38 - Registering application FLIGHT-SERVICE with eureka with status UP
2022-09-12 10:32:38 - Saw local status change event StatusChangeEvent [timestamp=1662958958155, current=UP, previous=STARTING]
2022-09-12 10:32:38 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001: registering service...
2022-09-12 10:32:38 - Tomcat started on port(s): 8001 (http) with context path ''
2022-09-12 10:32:38 - Updating port to 8001
2022-09-12 10:32:38 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - registration status: 204
2022-09-12 10:32:38 - Started FlightApplication in 12.513 seconds (JVM running for 13.649)
2022-09-12 10:33:27 - Starting FareApplication using Java 11.0.12 on inlen8520018489 with PID 33452 (C:\Users\ASHAIK31\FlightBookingSystem\fare\target\classes started by ashaik31 in C:\Users\ASHAIK31\FlightBookingSystem\service-discovery)
2022-09-12 10:33:27 - No active profile set, falling back to 1 default profile: "default"
2022-09-12 10:33:28 - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2022-09-12 10:33:29 - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-09-12 10:33:29 - Finished Spring Data repository scanning in 294 ms. Found 0 Reactive MongoDB repository interfaces.
2022-09-12 10:33:29 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-09-12 10:33:29 - Finished Spring Data repository scanning in 30 ms. Found 1 MongoDB repository interfaces.
2022-09-12 10:33:30 - BeanFactory id=ae6905fd-007e-300b-aa30-bbc83157d222
2022-09-12 10:33:31 - Tomcat initialized with port(s): 8003 (http)
2022-09-12 10:33:31 - Starting service [Tomcat]
2022-09-12 10:33:31 - Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-12 10:33:31 - Initializing Spring embedded WebApplicationContext
2022-09-12 10:33:31 - Root WebApplicationContext: initialization completed in 4128 ms
2022-09-12 10:33:32 - No URLs will be polled as dynamic configuration sources.
2022-09-12 10:33:32 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-12 10:33:32 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@30dd00b6
2022-09-12 10:33:32 - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2022-09-12 10:33:32 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@283bb8b7], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@25e95af1]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@4fa8297b], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-12 10:33:32 - Opened connection [connectionId{localValue:1, serverValue:18}] to localhost:27017
2022-09-12 10:33:32 - Opened connection [connectionId{localValue:2, serverValue:19}] to localhost:27017
2022-09-12 10:33:32 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=36258200}
2022-09-12 10:33:32 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-12 10:33:33 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-12 10:33:33 - No URLs will be polled as dynamic configuration sources.
2022-09-12 10:33:33 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-12 10:33:35 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@283bb8b7], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@25e95af1]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@4fa8297b], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-12 10:33:35 - Opened connection [connectionId{localValue:4, serverValue:21}] to localhost:27017
2022-09-12 10:33:35 - Opened connection [connectionId{localValue:3, serverValue:20}] to localhost:27017
2022-09-12 10:33:35 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=10123200}
2022-09-12 10:33:36 - Eureka HTTP Client uses RestTemplate.
2022-09-12 10:33:36 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-09-12 10:33:36 - Exposing 1 endpoint(s) beneath base path '/actuator'
2022-09-12 10:33:36 - Setting initial instance status as: STARTING
2022-09-12 10:33:37 - Initializing Eureka in region us-east-1
2022-09-12 10:33:37 - Resolving eureka endpoints via configuration
2022-09-12 10:33:37 - Disable delta property : false
2022-09-12 10:33:37 - Single vip registry refresh property : null
2022-09-12 10:33:37 - Force full registry fetch : false
2022-09-12 10:33:37 - Application is null : false
2022-09-12 10:33:37 - Registered Applications size is zero : true
2022-09-12 10:33:37 - Application version is -1: true
2022-09-12 10:33:37 - Getting all instance registry info from the eureka server
2022-09-12 10:33:37 - The response status is 200
2022-09-12 10:33:37 - Starting heartbeat executor: renew interval is: 30
2022-09-12 10:33:37 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-09-12 10:33:37 - Discovery Client initialized at timestamp 1662959017734 with initial instances count: 2
2022-09-12 10:33:37 - Registering application FARE-SERVICE with eureka with status UP
2022-09-12 10:33:37 - Saw local status change event StatusChangeEvent [timestamp=1662959017743, current=UP, previous=STARTING]
2022-09-12 10:33:37 - DiscoveryClient_FARE-SERVICE/inlen8520018489.corp.capgemini.com:fare-service:8003: registering service...
2022-09-12 10:33:37 - Tomcat started on port(s): 8003 (http) with context path ''
2022-09-12 10:33:37 - Updating port to 8003
2022-09-12 10:33:37 - DiscoveryClient_FARE-SERVICE/inlen8520018489.corp.capgemini.com:fare-service:8003 - registration status: 204
2022-09-12 10:33:38 - Started FareApplication in 12.175 seconds (JVM running for 13.322)
2022-09-12 10:34:03 - Starting BookingApplication using Java 11.0.12 on inlen8520018489 with PID 18280 (C:\Users\ASHAIK31\FlightBookingSystem\booking\target\classes started by ashaik31 in C:\Users\ASHAIK31\FlightBookingSystem\service-discovery)
2022-09-12 10:34:03 - No active profile set, falling back to 1 default profile: "default"
2022-09-12 10:34:04 - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2022-09-12 10:34:05 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-09-12 10:34:05 - Finished Spring Data repository scanning in 289 ms. Found 1 MongoDB repository interfaces.
2022-09-12 10:34:06 - BeanFactory id=55cb095f-a1ef-30f7-9a2b-c825f8a22d13
2022-09-12 10:34:07 - Tomcat initialized with port(s): 8002 (http)
2022-09-12 10:34:07 - Starting service [Tomcat]
2022-09-12 10:34:07 - Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-12 10:34:07 - Initializing Spring embedded WebApplicationContext
2022-09-12 10:34:07 - Root WebApplicationContext: initialization completed in 4026 ms
2022-09-12 10:34:07 - No URLs will be polled as dynamic configuration sources.
2022-09-12 10:34:07 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-12 10:34:07 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@687a0e40
2022-09-12 10:34:08 - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2022-09-12 10:34:08 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@65b73689], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2047adea]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@5af40e45], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-12 10:34:08 - Opened connection [connectionId{localValue:1, serverValue:23}] to localhost:27017
2022-09-12 10:34:08 - Opened connection [connectionId{localValue:2, serverValue:22}] to localhost:27017
2022-09-12 10:34:08 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=36132200}
2022-09-12 10:34:08 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-12 10:34:08 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-12 10:34:09 - No URLs will be polled as dynamic configuration sources.
2022-09-12 10:34:09 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-12 10:34:11 - Eureka HTTP Client uses RestTemplate.
2022-09-12 10:34:12 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-09-12 10:34:12 - Exposing 1 endpoint(s) beneath base path '/actuator'
2022-09-12 10:34:12 - Setting initial instance status as: STARTING
2022-09-12 10:34:12 - Initializing Eureka in region us-east-1
2022-09-12 10:34:12 - Resolving eureka endpoints via configuration
2022-09-12 10:34:12 - Disable delta property : false
2022-09-12 10:34:12 - Single vip registry refresh property : null
2022-09-12 10:34:12 - Force full registry fetch : false
2022-09-12 10:34:12 - Application is null : false
2022-09-12 10:34:12 - Registered Applications size is zero : true
2022-09-12 10:34:12 - Application version is -1: true
2022-09-12 10:34:12 - Getting all instance registry info from the eureka server
2022-09-12 10:34:13 - The response status is 200
2022-09-12 10:34:13 - Starting heartbeat executor: renew interval is: 30
2022-09-12 10:34:13 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-09-12 10:34:13 - Discovery Client initialized at timestamp 1662959053535 with initial instances count: 3
2022-09-12 10:34:13 - Registering application BOOKING-SERVICE with eureka with status UP
2022-09-12 10:34:13 - Saw local status change event StatusChangeEvent [timestamp=1662959053543, current=UP, previous=STARTING]
2022-09-12 10:34:13 - DiscoveryClient_BOOKING-SERVICE/inlen8520018489.corp.capgemini.com:booking-service:8002: registering service...
2022-09-12 10:34:13 - Tomcat started on port(s): 8002 (http) with context path ''
2022-09-12 10:34:13 - Updating port to 8002
2022-09-12 10:34:13 - DiscoveryClient_BOOKING-SERVICE/inlen8520018489.corp.capgemini.com:booking-service:8002 - registration status: 204
2022-09-12 10:34:14 - Started BookingApplication in 12.084 seconds (JVM running for 13.2)
2022-09-12 10:34:32 - Resolving eureka endpoints via configuration
2022-09-12 10:37:37 - Resolving eureka endpoints via configuration
2022-09-12 10:38:37 - Resolving eureka endpoints via configuration
2022-09-12 10:39:12 - Resolving eureka endpoints via configuration
2022-09-12 10:39:32 - Resolving eureka endpoints via configuration
2022-09-12 10:42:37 - Resolving eureka endpoints via configuration
2022-09-12 10:43:37 - Resolving eureka endpoints via configuration
2022-09-12 10:44:12 - Resolving eureka endpoints via configuration
2022-09-12 10:44:32 - Resolving eureka endpoints via configuration
2022-09-12 10:47:37 - Resolving eureka endpoints via configuration
2022-09-12 10:48:37 - Resolving eureka endpoints via configuration
2022-09-12 10:49:12 - Resolving eureka endpoints via configuration
2022-09-12 10:49:33 - Resolving eureka endpoints via configuration
2022-09-12 10:52:37 - Resolving eureka endpoints via configuration
2022-09-12 10:53:37 - Resolving eureka endpoints via configuration
2022-09-12 10:54:12 - Resolving eureka endpoints via configuration
2022-09-12 10:54:33 - Resolving eureka endpoints via configuration
2022-09-12 10:57:37 - Resolving eureka endpoints via configuration
2022-09-12 10:58:37 - Resolving eureka endpoints via configuration
2022-09-12 10:59:12 - Resolving eureka endpoints via configuration
2022-09-12 10:59:33 - Resolving eureka endpoints via configuration
2022-09-12 11:02:37 - Resolving eureka endpoints via configuration
2022-09-12 11:03:37 - Resolving eureka endpoints via configuration
2022-09-12 11:04:12 - Resolving eureka endpoints via configuration
2022-09-12 11:04:33 - Resolving eureka endpoints via configuration
2022-09-12 11:07:37 - Resolving eureka endpoints via configuration
2022-09-12 11:08:37 - Resolving eureka endpoints via configuration
2022-09-12 11:09:12 - Resolving eureka endpoints via configuration
2022-09-12 11:09:33 - Resolving eureka endpoints via configuration
2022-09-12 11:12:37 - Resolving eureka endpoints via configuration
2022-09-12 11:13:37 - Resolving eureka endpoints via configuration
2022-09-12 11:14:12 - Resolving eureka endpoints via configuration
2022-09-12 11:14:33 - Resolving eureka endpoints via configuration
2022-09-12 11:17:37 - Resolving eureka endpoints via configuration
2022-09-12 11:18:37 - Resolving eureka endpoints via configuration
2022-09-12 11:19:13 - Resolving eureka endpoints via configuration
2022-09-12 11:19:33 - Resolving eureka endpoints via configuration
2022-09-12 11:22:37 - Resolving eureka endpoints via configuration
2022-09-12 11:23:37 - Resolving eureka endpoints via configuration
2022-09-12 11:24:13 - Resolving eureka endpoints via configuration
2022-09-12 11:24:33 - Resolving eureka endpoints via configuration
2022-09-12 11:24:42 - Starting CheckInApplication using Java 11.0.12 on inlen8520018489 with PID 26500 (C:\Users\ASHAIK31\FlightBookingSystem\check-in\target\classes started by ashaik31 in C:\Users\ASHAIK31\FlightBookingSystem\service-discovery)
2022-09-12 11:24:42 - No active profile set, falling back to 1 default profile: "default"
2022-09-12 11:24:43 - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2022-09-12 11:24:44 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-09-12 11:24:44 - Finished Spring Data repository scanning in 274 ms. Found 1 MongoDB repository interfaces.
2022-09-12 11:24:45 - BeanFactory id=14f26165-260f-3148-9e25-d2a4a0303825
2022-09-12 11:24:46 - Tomcat initialized with port(s): 8004 (http)
2022-09-12 11:24:46 - Starting service [Tomcat]
2022-09-12 11:24:46 - Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-12 11:24:46 - Initializing Spring embedded WebApplicationContext
2022-09-12 11:24:46 - Root WebApplicationContext: initialization completed in 3868 ms
2022-09-12 11:24:46 - No URLs will be polled as dynamic configuration sources.
2022-09-12 11:24:46 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-12 11:24:47 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4abbe41c
2022-09-12 11:24:47 - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2022-09-12 11:24:47 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@1926f962], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@62794582]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@c82ad22], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-12 11:24:47 - Opened connection [connectionId{localValue:1, serverValue:25}] to localhost:27017
2022-09-12 11:24:47 - Opened connection [connectionId{localValue:2, serverValue:24}] to localhost:27017
2022-09-12 11:24:47 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41010300}
2022-09-12 11:24:47 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-12 11:24:48 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-12 11:24:48 - No URLs will be polled as dynamic configuration sources.
2022-09-12 11:24:48 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-12 11:24:51 - Eureka HTTP Client uses RestTemplate.
2022-09-12 11:24:51 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-09-12 11:24:51 - Exposing 1 endpoint(s) beneath base path '/actuator'
2022-09-12 11:24:51 - Setting initial instance status as: STARTING
2022-09-12 11:24:51 - Initializing Eureka in region us-east-1
2022-09-12 11:24:51 - Resolving eureka endpoints via configuration
2022-09-12 11:24:51 - Disable delta property : false
2022-09-12 11:24:51 - Single vip registry refresh property : null
2022-09-12 11:24:51 - Force full registry fetch : false
2022-09-12 11:24:51 - Application is null : false
2022-09-12 11:24:51 - Registered Applications size is zero : true
2022-09-12 11:24:51 - Application version is -1: true
2022-09-12 11:24:51 - Getting all instance registry info from the eureka server
2022-09-12 11:24:52 - The response status is 200
2022-09-12 11:24:52 - Starting heartbeat executor: renew interval is: 30
2022-09-12 11:24:52 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-09-12 11:24:52 - Discovery Client initialized at timestamp 1662962092521 with initial instances count: 4
2022-09-12 11:24:52 - Registering application CHECKIN-SERVICE with eureka with status UP
2022-09-12 11:24:52 - Saw local status change event StatusChangeEvent [timestamp=1662962092528, current=UP, previous=STARTING]
2022-09-12 11:24:52 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 11:24:52 - Tomcat started on port(s): 8004 (http) with context path ''
2022-09-12 11:24:52 - Updating port to 8004
2022-09-12 11:24:52 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 11:24:53 - Started CheckInApplication in 11.77 seconds (JVM running for 12.895)
2022-09-12 11:26:01 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-12 11:26:01 - Initializing Servlet 'dispatcherServlet'
2022-09-12 11:26:01 - Completed initialization in 40 ms
2022-09-12 11:26:02 - Init duration for springdoc-openapi is: 417 ms
2022-09-12 11:26:07 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-12 11:26:07 - Initializing Servlet 'dispatcherServlet'
2022-09-12 11:26:07 - Completed initialization in 3 ms
2022-09-12 11:26:08 - Init duration for springdoc-openapi is: 247 ms
2022-09-12 11:26:37 - Opened connection [connectionId{localValue:3, serverValue:40}] to localhost:27017
2022-09-12 11:26:50 - get fare by Id
2022-09-12 11:27:04 - get fare by Id
2022-09-12 11:27:04 - get fare by Id
2022-09-12 11:27:04 - failed to processed fallback is the method: 'handleFetchCheckInById'. 
2022-09-12 11:27:37 - Resolving eureka endpoints via configuration
2022-09-12 11:28:37 - Resolving eureka endpoints via configuration
2022-09-12 11:29:13 - Resolving eureka endpoints via configuration
2022-09-12 11:29:33 - Resolving eureka endpoints via configuration
2022-09-12 11:29:51 - Resolving eureka endpoints via configuration
2022-09-12 11:32:37 - Resolving eureka endpoints via configuration
2022-09-12 11:33:37 - Resolving eureka endpoints via configuration
2022-09-12 11:34:13 - Resolving eureka endpoints via configuration
2022-09-12 11:34:33 - Resolving eureka endpoints via configuration
2022-09-12 11:34:51 - Resolving eureka endpoints via configuration
2022-09-12 11:37:37 - Resolving eureka endpoints via configuration
2022-09-12 11:38:37 - Resolving eureka endpoints via configuration
2022-09-12 11:39:13 - Resolving eureka endpoints via configuration
2022-09-12 11:39:33 - Resolving eureka endpoints via configuration
2022-09-12 11:39:51 - Resolving eureka endpoints via configuration
2022-09-12 11:42:37 - Resolving eureka endpoints via configuration
2022-09-12 11:43:37 - Resolving eureka endpoints via configuration
2022-09-12 11:44:13 - Resolving eureka endpoints via configuration
2022-09-12 11:44:33 - Resolving eureka endpoints via configuration
2022-09-12 11:44:51 - Resolving eureka endpoints via configuration
2022-09-12 11:47:37 - Resolving eureka endpoints via configuration
2022-09-12 11:48:37 - Resolving eureka endpoints via configuration
2022-09-12 11:49:13 - Resolving eureka endpoints via configuration
2022-09-12 11:49:33 - Resolving eureka endpoints via configuration
2022-09-12 11:49:51 - Resolving eureka endpoints via configuration
2022-09-12 11:52:37 - Resolving eureka endpoints via configuration
2022-09-12 11:53:37 - Resolving eureka endpoints via configuration
2022-09-12 11:54:13 - Resolving eureka endpoints via configuration
2022-09-12 11:54:33 - Resolving eureka endpoints via configuration
2022-09-12 11:54:51 - Resolving eureka endpoints via configuration
2022-09-12 11:54:54 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 11:54:54 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 11:54:54 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 11:57:37 - Resolving eureka endpoints via configuration
2022-09-12 11:58:37 - Resolving eureka endpoints via configuration
2022-09-12 11:58:54 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 11:58:54 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 11:58:54 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 11:59:13 - Resolving eureka endpoints via configuration
2022-09-12 11:59:33 - Resolving eureka endpoints via configuration
2022-09-12 11:59:51 - Resolving eureka endpoints via configuration
2022-09-12 12:02:37 - Resolving eureka endpoints via configuration
2022-09-12 12:03:37 - Resolving eureka endpoints via configuration
2022-09-12 12:04:13 - Resolving eureka endpoints via configuration
2022-09-12 12:04:33 - Resolving eureka endpoints via configuration
2022-09-12 12:04:51 - Resolving eureka endpoints via configuration
2022-09-12 12:07:37 - Resolving eureka endpoints via configuration
2022-09-12 12:08:37 - Resolving eureka endpoints via configuration
2022-09-12 12:09:13 - Resolving eureka endpoints via configuration
2022-09-12 12:09:33 - Resolving eureka endpoints via configuration
2022-09-12 12:09:52 - Resolving eureka endpoints via configuration
2022-09-12 12:12:37 - Resolving eureka endpoints via configuration
2022-09-12 12:13:37 - Resolving eureka endpoints via configuration
2022-09-12 12:14:13 - Resolving eureka endpoints via configuration
2022-09-12 12:14:33 - Resolving eureka endpoints via configuration
2022-09-12 12:14:52 - Resolving eureka endpoints via configuration
2022-09-12 12:17:37 - Resolving eureka endpoints via configuration
2022-09-12 12:18:37 - Resolving eureka endpoints via configuration
2022-09-12 12:19:13 - Resolving eureka endpoints via configuration
2022-09-12 12:19:33 - Resolving eureka endpoints via configuration
2022-09-12 12:19:52 - Resolving eureka endpoints via configuration
2022-09-12 12:22:37 - Resolving eureka endpoints via configuration
2022-09-12 12:23:37 - Resolving eureka endpoints via configuration
2022-09-12 12:24:13 - Resolving eureka endpoints via configuration
2022-09-12 12:24:33 - Resolving eureka endpoints via configuration
2022-09-12 12:24:52 - Resolving eureka endpoints via configuration
2022-09-12 12:26:55 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:26:55 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:26:55 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:27:25 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:27:25 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:27:25 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:27:37 - Resolving eureka endpoints via configuration
2022-09-12 12:28:37 - Resolving eureka endpoints via configuration
2022-09-12 12:28:55 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:28:55 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:28:55 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:29:13 - Resolving eureka endpoints via configuration
2022-09-12 12:29:25 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:29:25 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:29:25 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:29:33 - Resolving eureka endpoints via configuration
2022-09-12 12:29:52 - Resolving eureka endpoints via configuration
2022-09-12 12:32:37 - Resolving eureka endpoints via configuration
2022-09-12 12:33:37 - Resolving eureka endpoints via configuration
2022-09-12 12:34:13 - Resolving eureka endpoints via configuration
2022-09-12 12:34:33 - Resolving eureka endpoints via configuration
2022-09-12 12:34:52 - Resolving eureka endpoints via configuration
2022-09-12 12:35:56 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:35:56 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:35:56 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:36:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:36:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:36:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:37:37 - Resolving eureka endpoints via configuration
2022-09-12 12:37:56 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:37:56 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:37:56 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:38:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:38:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:38:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:38:37 - Resolving eureka endpoints via configuration
2022-09-12 12:39:13 - Resolving eureka endpoints via configuration
2022-09-12 12:39:33 - Resolving eureka endpoints via configuration
2022-09-12 12:39:52 - Resolving eureka endpoints via configuration
2022-09-12 12:42:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:42:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:42:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:42:37 - Resolving eureka endpoints via configuration
2022-09-12 12:43:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:43:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:43:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:43:37 - Resolving eureka endpoints via configuration
2022-09-12 12:44:13 - Resolving eureka endpoints via configuration
2022-09-12 12:44:33 - Resolving eureka endpoints via configuration
2022-09-12 12:44:52 - Resolving eureka endpoints via configuration
2022-09-12 12:47:37 - Resolving eureka endpoints via configuration
2022-09-12 12:48:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:48:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:48:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:48:37 - Resolving eureka endpoints via configuration
2022-09-12 12:49:13 - Resolving eureka endpoints via configuration
2022-09-12 12:49:33 - Resolving eureka endpoints via configuration
2022-09-12 12:49:52 - Resolving eureka endpoints via configuration
2022-09-12 12:50:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:50:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:50:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:52:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:52:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:52:26 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:52:37 - Resolving eureka endpoints via configuration
2022-09-12 12:53:37 - Resolving eureka endpoints via configuration
2022-09-12 12:53:57 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:53:57 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:53:57 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:54:13 - Resolving eureka endpoints via configuration
2022-09-12 12:54:33 - Resolving eureka endpoints via configuration
2022-09-12 12:54:52 - Resolving eureka endpoints via configuration
2022-09-12 12:55:27 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:55:27 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:55:27 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:55:57 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:55:57 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:55:57 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:56:57 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - Re-registering apps/CHECKIN-SERVICE
2022-09-12 12:56:57 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004: registering service...
2022-09-12 12:56:57 - DiscoveryClient_CHECKIN-SERVICE/inlen8520018489.corp.capgemini.com:checkin-service:8004 - registration status: 204
2022-09-12 12:57:37 - Resolving eureka endpoints via configuration
2022-09-12 12:57:51 - DiscoveryClient_BOOKING-SERVICE/inlen8520018489.corp.capgemini.com:booking-service:8002 - Re-registering apps/BOOKING-SERVICE
2022-09-12 12:57:51 - DiscoveryClient_BOOKING-SERVICE/inlen8520018489.corp.capgemini.com:booking-service:8002: registering service...
2022-09-12 12:57:51 - DiscoveryClient_BOOKING-SERVICE/inlen8520018489.corp.capgemini.com:booking-service:8002 - registration status: 204
2022-09-12 12:58:37 - Resolving eureka endpoints via configuration
2022-09-12 12:58:51 - DiscoveryClient_BOOKING-SERVICE/inlen8520018489.corp.capgemini.com:booking-service:8002 - Re-registering apps/BOOKING-SERVICE
2022-09-12 12:58:51 - DiscoveryClient_BOOKING-SERVICE/inlen8520018489.corp.capgemini.com:booking-service:8002: registering service...
2022-09-12 12:58:51 - DiscoveryClient_BOOKING-SERVICE/inlen8520018489.corp.capgemini.com:booking-service:8002 - registration status: 204
2022-09-12 12:59:13 - Resolving eureka endpoints via configuration
2022-09-12 12:59:21 - DiscoveryClient_BOOKING-SERVICE/inlen8520018489.corp.capgemini.com:booking-service:8002 - Re-registering apps/BOOKING-SERVICE
2022-09-12 12:59:21 - DiscoveryClient_BOOKING-SERVICE/inlen8520018489.corp.capgemini.com:booking-service:8002: registering service...
2022-09-12 12:59:21 - DiscoveryClient_BOOKING-SERVICE/inlen8520018489.corp.capgemini.com:booking-service:8002 - registration status: 204
2022-09-12 12:59:33 - Resolving eureka endpoints via configuration
2022-09-12 12:59:52 - Resolving eureka endpoints via configuration
2022-09-12 13:02:37 - Resolving eureka endpoints via configuration
2022-09-12 13:03:37 - Resolving eureka endpoints via configuration
2022-09-12 13:04:13 - Resolving eureka endpoints via configuration
2022-09-12 13:04:33 - Resolving eureka endpoints via configuration
2022-09-12 13:04:52 - Resolving eureka endpoints via configuration
2022-09-12 13:07:37 - Resolving eureka endpoints via configuration
2022-09-12 13:08:37 - Resolving eureka endpoints via configuration
2022-09-12 13:09:13 - Resolving eureka endpoints via configuration
2022-09-12 13:09:33 - Resolving eureka endpoints via configuration
2022-09-12 13:09:46 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - Re-registering apps/FLIGHT-SERVICE
2022-09-12 13:09:46 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001: registering service...
2022-09-12 13:09:46 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - registration status: 204
2022-09-12 13:09:52 - Resolving eureka endpoints via configuration
2022-09-12 13:10:46 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - Re-registering apps/FLIGHT-SERVICE
2022-09-12 13:10:46 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001: registering service...
2022-09-12 13:10:46 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - registration status: 204
2022-09-12 13:12:16 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - Re-registering apps/FLIGHT-SERVICE
2022-09-12 13:12:16 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001: registering service...
2022-09-12 13:12:16 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - registration status: 204
2022-09-12 13:12:37 - Resolving eureka endpoints via configuration
2022-09-12 13:13:16 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - Re-registering apps/FLIGHT-SERVICE
2022-09-12 13:13:16 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001: registering service...
2022-09-12 13:13:16 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - registration status: 204
2022-09-12 13:13:37 - Resolving eureka endpoints via configuration
2022-09-12 13:14:13 - Resolving eureka endpoints via configuration
2022-09-12 13:14:33 - Resolving eureka endpoints via configuration
2022-09-12 13:14:52 - Resolving eureka endpoints via configuration
2022-09-12 13:15:16 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - Re-registering apps/FLIGHT-SERVICE
2022-09-12 13:15:16 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001: registering service...
2022-09-12 13:15:16 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - registration status: 204
2022-09-12 13:17:37 - Resolving eureka endpoints via configuration
2022-09-12 13:18:37 - Resolving eureka endpoints via configuration
2022-09-12 13:19:13 - Resolving eureka endpoints via configuration
2022-09-12 13:19:33 - Resolving eureka endpoints via configuration
2022-09-12 13:19:52 - Resolving eureka endpoints via configuration
2022-09-12 13:20:52 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-12 13:20:52 - Initializing Servlet 'dispatcherServlet'
2022-09-12 13:20:52 - Completed initialization in 19 ms
2022-09-12 13:20:52 - Init duration for springdoc-openapi is: 207 ms
2022-09-12 13:21:25 - Opened connection [connectionId{localValue:5, serverValue:105}] to localhost:27017
2022-09-12 13:22:37 - Resolving eureka endpoints via configuration
2022-09-12 13:23:37 - Resolving eureka endpoints via configuration
2022-09-12 13:24:13 - Resolving eureka endpoints via configuration
2022-09-12 13:24:33 - Resolving eureka endpoints via configuration
2022-09-12 13:24:52 - Resolving eureka endpoints via configuration
2022-09-12 13:26:17 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - Re-registering apps/FLIGHT-SERVICE
2022-09-12 13:26:17 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001: registering service...
2022-09-12 13:26:17 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - registration status: 204
2022-09-12 13:27:17 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - Re-registering apps/FLIGHT-SERVICE
2022-09-12 13:27:17 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001: registering service...
2022-09-12 13:27:17 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - registration status: 204
2022-09-12 13:27:37 - Resolving eureka endpoints via configuration
2022-09-12 13:28:37 - Resolving eureka endpoints via configuration
2022-09-12 13:29:13 - Resolving eureka endpoints via configuration
2022-09-12 13:29:33 - Resolving eureka endpoints via configuration
2022-09-12 13:29:52 - Resolving eureka endpoints via configuration
2022-09-12 13:32:37 - Resolving eureka endpoints via configuration
2022-09-12 13:33:37 - Resolving eureka endpoints via configuration
2022-09-12 13:34:13 - Resolving eureka endpoints via configuration
2022-09-12 13:34:33 - Resolving eureka endpoints via configuration
2022-09-12 13:34:52 - Resolving eureka endpoints via configuration
2022-09-12 13:37:37 - Resolving eureka endpoints via configuration
2022-09-12 13:38:37 - Resolving eureka endpoints via configuration
2022-09-12 13:39:13 - Resolving eureka endpoints via configuration
2022-09-12 13:39:33 - Resolving eureka endpoints via configuration
2022-09-12 13:39:52 - Resolving eureka endpoints via configuration
2022-09-12 13:42:37 - Resolving eureka endpoints via configuration
2022-09-12 13:43:37 - Resolving eureka endpoints via configuration
2022-09-12 13:44:13 - Resolving eureka endpoints via configuration
2022-09-12 13:44:33 - Resolving eureka endpoints via configuration
2022-09-12 13:44:52 - Resolving eureka endpoints via configuration
2022-09-12 13:47:37 - Resolving eureka endpoints via configuration
2022-09-12 13:48:37 - Resolving eureka endpoints via configuration
2022-09-12 13:49:13 - Resolving eureka endpoints via configuration
2022-09-12 13:49:33 - Resolving eureka endpoints via configuration
2022-09-12 13:49:52 - Resolving eureka endpoints via configuration
2022-09-12 13:52:37 - Resolving eureka endpoints via configuration
2022-09-12 13:53:37 - Resolving eureka endpoints via configuration
2022-09-12 13:54:13 - Resolving eureka endpoints via configuration
2022-09-12 13:54:33 - Resolving eureka endpoints via configuration
2022-09-12 13:54:52 - Resolving eureka endpoints via configuration
2022-09-12 13:57:37 - Resolving eureka endpoints via configuration
2022-09-12 13:58:37 - Resolving eureka endpoints via configuration
2022-09-12 13:59:13 - Resolving eureka endpoints via configuration
2022-09-12 13:59:33 - Resolving eureka endpoints via configuration
2022-09-12 13:59:52 - Resolving eureka endpoints via configuration
2022-09-12 14:02:37 - Resolving eureka endpoints via configuration
2022-09-12 14:03:37 - Resolving eureka endpoints via configuration
2022-09-12 14:04:13 - Resolving eureka endpoints via configuration
2022-09-12 14:04:33 - Resolving eureka endpoints via configuration
2022-09-12 14:04:52 - Resolving eureka endpoints via configuration
2022-09-12 14:07:37 - Resolving eureka endpoints via configuration
2022-09-12 14:08:37 - Resolving eureka endpoints via configuration
2022-09-12 14:09:03 - Starting UserApplication using Java 11.0.12 on inlen8520018489 with PID 8188 (C:\Users\ASHAIK31\FlightBookingSystem\user\target\classes started by ashaik31 in C:\Users\ASHAIK31\FlightBookingSystem\service-discovery)
2022-09-12 14:09:03 - No active profile set, falling back to 1 default profile: "default"
2022-09-12 14:09:04 - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2022-09-12 14:09:05 - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-09-12 14:09:05 - Finished Spring Data repository scanning in 252 ms. Found 0 Reactive MongoDB repository interfaces.
2022-09-12 14:09:05 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-09-12 14:09:05 - Finished Spring Data repository scanning in 34 ms. Found 1 MongoDB repository interfaces.
2022-09-12 14:09:05 - BeanFactory id=7ed4f8b9-a8c6-39d2-94db-960c140b4cec
2022-09-12 14:09:07 - Tomcat initialized with port(s): 8000 (http)
2022-09-12 14:09:07 - Starting service [Tomcat]
2022-09-12 14:09:07 - Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-12 14:09:07 - Initializing Spring embedded WebApplicationContext
2022-09-12 14:09:07 - Root WebApplicationContext: initialization completed in 3973 ms
2022-09-12 14:09:07 - No URLs will be polled as dynamic configuration sources.
2022-09-12 14:09:07 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-12 14:09:07 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@e162a35
2022-09-12 14:09:07 - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2022-09-12 14:09:08 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@2dde0a34], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@61836cd9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@1b632442], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-12 14:09:08 - Opened connection [connectionId{localValue:1, serverValue:114}] to localhost:27017
2022-09-12 14:09:08 - Opened connection [connectionId{localValue:2, serverValue:115}] to localhost:27017
2022-09-12 14:09:08 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=38712200}
2022-09-12 14:09:08 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-12 14:09:08 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-12 14:09:09 - No URLs will be polled as dynamic configuration sources.
2022-09-12 14:09:09 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-12 14:09:11 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@2dde0a34], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@61836cd9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@1b632442], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-12 14:09:11 - Opened connection [connectionId{localValue:3, serverValue:117}] to localhost:27017
2022-09-12 14:09:11 - Opened connection [connectionId{localValue:4, serverValue:116}] to localhost:27017
2022-09-12 14:09:11 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=10603800}
2022-09-12 14:09:12 - Eureka HTTP Client uses RestTemplate.
2022-09-12 14:09:12 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-09-12 14:09:12 - Exposing 1 endpoint(s) beneath base path '/actuator'
2022-09-12 14:09:12 - Setting initial instance status as: STARTING
2022-09-12 14:09:13 - Initializing Eureka in region us-east-1
2022-09-12 14:09:13 - Resolving eureka endpoints via configuration
2022-09-12 14:09:13 - Disable delta property : false
2022-09-12 14:09:13 - Single vip registry refresh property : null
2022-09-12 14:09:13 - Force full registry fetch : false
2022-09-12 14:09:13 - Application is null : false
2022-09-12 14:09:13 - Registered Applications size is zero : true
2022-09-12 14:09:13 - Application version is -1: true
2022-09-12 14:09:13 - Getting all instance registry info from the eureka server
2022-09-12 14:09:13 - Resolving eureka endpoints via configuration
2022-09-12 14:09:13 - The response status is 200
2022-09-12 14:09:13 - Starting heartbeat executor: renew interval is: 30
2022-09-12 14:09:13 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-09-12 14:09:13 - Discovery Client initialized at timestamp 1662971953822 with initial instances count: 5
2022-09-12 14:09:13 - Registering application USER-SERVICE with eureka with status UP
2022-09-12 14:09:13 - Saw local status change event StatusChangeEvent [timestamp=1662971953830, current=UP, previous=STARTING]
2022-09-12 14:09:13 - DiscoveryClient_USER-SERVICE/inlen8520018489.corp.capgemini.com:user-service:8000: registering service...
2022-09-12 14:09:13 - Tomcat started on port(s): 8000 (http) with context path ''
2022-09-12 14:09:13 - Updating port to 8000
2022-09-12 14:09:13 - DiscoveryClient_USER-SERVICE/inlen8520018489.corp.capgemini.com:user-service:8000 - registration status: 204
2022-09-12 14:09:14 - Started UserApplication in 12.385 seconds (JVM running for 13.419)
2022-09-12 14:09:43 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-12 14:09:43 - Initializing Servlet 'dispatcherServlet'
2022-09-12 14:09:43 - Completed initialization in 4 ms
2022-09-12 14:09:43 - Opened connection [connectionId{localValue:5, serverValue:118}] to localhost:27017
2022-09-12 14:09:43 - This is an warning message for get user by Id
2022-09-12 14:09:43 - This is an warning message for get user by Id
2022-09-12 14:09:52 - Resolving eureka endpoints via configuration
2022-09-12 14:12:37 - Resolving eureka endpoints via configuration
2022-09-12 14:13:37 - Resolving eureka endpoints via configuration
2022-09-12 14:14:13 - Resolving eureka endpoints via configuration
2022-09-12 14:14:13 - Resolving eureka endpoints via configuration
2022-09-12 14:14:52 - Resolving eureka endpoints via configuration
2022-09-12 14:17:38 - Resolving eureka endpoints via configuration
2022-09-12 14:18:37 - Resolving eureka endpoints via configuration
2022-09-12 14:19:13 - Resolving eureka endpoints via configuration
2022-09-12 14:19:13 - Resolving eureka endpoints via configuration
2022-09-12 14:19:52 - Resolving eureka endpoints via configuration
2022-09-12 14:22:38 - Resolving eureka endpoints via configuration
2022-09-12 14:23:37 - Resolving eureka endpoints via configuration
2022-09-12 14:24:13 - Resolving eureka endpoints via configuration
2022-09-12 14:24:13 - Resolving eureka endpoints via configuration
2022-09-12 14:24:52 - Resolving eureka endpoints via configuration
2022-09-12 14:27:38 - Resolving eureka endpoints via configuration
2022-09-12 14:28:37 - Resolving eureka endpoints via configuration
2022-09-12 14:29:13 - Resolving eureka endpoints via configuration
2022-09-12 14:29:13 - Resolving eureka endpoints via configuration
2022-09-12 14:29:52 - Resolving eureka endpoints via configuration
2022-09-12 14:32:38 - Resolving eureka endpoints via configuration
2022-09-12 14:33:37 - Resolving eureka endpoints via configuration
2022-09-12 14:34:13 - Resolving eureka endpoints via configuration
2022-09-12 14:34:13 - Resolving eureka endpoints via configuration
2022-09-12 14:34:52 - Resolving eureka endpoints via configuration
2022-09-12 14:37:38 - Resolving eureka endpoints via configuration
2022-09-12 14:38:37 - Resolving eureka endpoints via configuration
2022-09-12 14:39:13 - Resolving eureka endpoints via configuration
2022-09-12 14:39:13 - Resolving eureka endpoints via configuration
2022-09-12 14:39:52 - Resolving eureka endpoints via configuration
2022-09-12 14:42:38 - Resolving eureka endpoints via configuration
2022-09-12 14:43:37 - Resolving eureka endpoints via configuration
2022-09-12 14:44:13 - Resolving eureka endpoints via configuration
2022-09-12 14:44:13 - Resolving eureka endpoints via configuration
2022-09-12 14:44:52 - Resolving eureka endpoints via configuration
2022-09-12 14:47:38 - Resolving eureka endpoints via configuration
2022-09-12 14:48:37 - Resolving eureka endpoints via configuration
2022-09-12 14:58:47 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
2022-09-12 14:58:47 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
2022-09-12 14:58:47 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
2022-09-12 14:58:47 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
2022-09-12 14:58:47 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
2022-09-12 14:58:47 - Opened connection [connectionId{localValue:6, serverValue:119}] to localhost:27017
2022-09-12 14:58:47 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=50128200}
2022-09-12 14:58:47 - Opened connection [connectionId{localValue:6, serverValue:120}] to localhost:27017
2022-09-12 14:58:47 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=66354300}
2022-09-12 14:58:47 - Opened connection [connectionId{localValue:3, serverValue:123}] to localhost:27017
2022-09-12 14:58:47 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41845500}
2022-09-12 14:58:47 - Opened connection [connectionId{localValue:4, serverValue:121}] to localhost:27017
2022-09-12 14:58:47 - Opened connection [connectionId{localValue:5, serverValue:122}] to localhost:27017
2022-09-12 14:58:47 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=141187100}
2022-09-12 14:58:47 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=140336300}
2022-09-12 14:59:00 - Resolving eureka endpoints via configuration
2022-09-12 14:59:01 - Resolving eureka endpoints via configuration
2022-09-12 14:59:39 - Resolving eureka endpoints via configuration
2022-09-12 15:02:25 - Resolving eureka endpoints via configuration
2022-09-12 15:03:25 - Resolving eureka endpoints via configuration
2022-09-12 15:04:00 - Resolving eureka endpoints via configuration
2022-09-12 15:04:01 - Resolving eureka endpoints via configuration
2022-09-12 15:04:39 - Resolving eureka endpoints via configuration
2022-09-12 15:07:25 - Resolving eureka endpoints via configuration
2022-09-12 15:08:25 - Resolving eureka endpoints via configuration
2022-09-12 15:09:00 - Resolving eureka endpoints via configuration
2022-09-12 15:09:01 - Resolving eureka endpoints via configuration
2022-09-12 15:09:39 - Resolving eureka endpoints via configuration
2022-09-12 15:12:25 - Resolving eureka endpoints via configuration
2022-09-12 15:12:34 - Opened connection [connectionId{localValue:7, serverValue:126}] to localhost:27017
2022-09-12 15:13:25 - Resolving eureka endpoints via configuration
2022-09-12 15:14:00 - Resolving eureka endpoints via configuration
2022-09-12 15:14:01 - Resolving eureka endpoints via configuration
2022-09-12 15:14:39 - Resolving eureka endpoints via configuration
2022-09-12 15:17:25 - Resolving eureka endpoints via configuration
2022-09-12 15:18:25 - Resolving eureka endpoints via configuration
2022-09-12 15:19:00 - Resolving eureka endpoints via configuration
2022-09-12 15:19:01 - Resolving eureka endpoints via configuration
2022-09-12 15:19:39 - Resolving eureka endpoints via configuration
2022-09-12 15:20:39 - Opened connection [connectionId{localValue:7, serverValue:127}] to localhost:27017
2022-09-12 15:20:39 - This is an warning message for get user by Id
2022-09-12 15:20:40 - get flight by fare Id
2022-09-12 15:20:40 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-12 15:20:40 - Initializing Servlet 'dispatcherServlet'
2022-09-12 15:20:40 - Completed initialization in 48 ms
2022-09-12 15:20:41 - get flight by fare Id
2022-09-12 15:20:41 - get flight by fare Id
2022-09-12 15:20:41 - Opened connection [connectionId{localValue:6, serverValue:128}] to localhost:27017
2022-09-12 15:20:41 - Opened connection [connectionId{localValue:7, serverValue:129}] to localhost:27017
2022-09-12 15:20:41 - Opened connection [connectionId{localValue:8, serverValue:130}] to localhost:27017
2022-09-12 15:20:41 - get fare by price
2022-09-12 15:20:41 - get fare by price
2022-09-12 15:20:41 - get fare by price
2022-09-12 15:20:52 - This is an warning message for get user by Id
2022-09-12 15:20:52 - get flight by fare Id
2022-09-12 15:20:52 - get fare by price
2022-09-12 15:22:25 - Resolving eureka endpoints via configuration
2022-09-12 15:23:25 - Resolving eureka endpoints via configuration
2022-09-12 15:24:00 - Resolving eureka endpoints via configuration
2022-09-12 15:24:01 - Resolving eureka endpoints via configuration
2022-09-12 15:24:39 - Resolving eureka endpoints via configuration
2022-09-12 15:27:25 - Resolving eureka endpoints via configuration
2022-09-12 15:28:25 - Resolving eureka endpoints via configuration
2022-09-12 15:29:00 - Resolving eureka endpoints via configuration
2022-09-12 15:29:01 - Resolving eureka endpoints via configuration
2022-09-12 15:29:40 - Resolving eureka endpoints via configuration
2022-09-12 15:32:25 - Resolving eureka endpoints via configuration
2022-09-12 15:33:25 - Resolving eureka endpoints via configuration
2022-09-12 15:34:00 - Resolving eureka endpoints via configuration
2022-09-12 15:34:01 - Resolving eureka endpoints via configuration
2022-09-12 15:34:40 - Resolving eureka endpoints via configuration
2022-09-12 15:37:25 - Resolving eureka endpoints via configuration
2022-09-12 15:38:25 - Resolving eureka endpoints via configuration
2022-09-12 15:39:00 - Resolving eureka endpoints via configuration
2022-09-12 15:39:01 - Resolving eureka endpoints via configuration
2022-09-12 15:39:40 - Resolving eureka endpoints via configuration
2022-09-12 15:42:25 - Resolving eureka endpoints via configuration
2022-09-12 15:43:25 - Resolving eureka endpoints via configuration
2022-09-12 15:44:00 - Resolving eureka endpoints via configuration
2022-09-12 15:44:01 - Resolving eureka endpoints via configuration
2022-09-12 15:44:40 - Resolving eureka endpoints via configuration
2022-09-12 15:47:25 - Resolving eureka endpoints via configuration
2022-09-12 15:48:25 - Resolving eureka endpoints via configuration
2022-09-12 15:48:53 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-12 15:48:53 - Initializing Servlet 'dispatcherServlet'
2022-09-12 15:48:53 - Completed initialization in 58 ms
2022-09-12 15:48:54 - Opened connection [connectionId{localValue:4, serverValue:137}] to localhost:27017
2022-09-12 15:48:54 - get flight by Id
2022-09-12 15:48:54 - get fare by price
2022-09-12 15:48:54 - save booking
2022-09-12 15:49:00 - Resolving eureka endpoints via configuration
2022-09-12 15:49:01 - Resolving eureka endpoints via configuration
2022-09-12 15:49:40 - Resolving eureka endpoints via configuration
2022-09-12 15:52:25 - Resolving eureka endpoints via configuration
2022-09-12 15:53:25 - Resolving eureka endpoints via configuration
2022-09-12 15:54:00 - Resolving eureka endpoints via configuration
2022-09-12 15:54:01 - Resolving eureka endpoints via configuration
2022-09-12 15:54:40 - Resolving eureka endpoints via configuration
2022-09-12 15:57:25 - Resolving eureka endpoints via configuration
2022-09-12 15:58:25 - Resolving eureka endpoints via configuration
2022-09-12 15:59:00 - Resolving eureka endpoints via configuration
2022-09-12 15:59:01 - Resolving eureka endpoints via configuration
2022-09-12 15:59:40 - Resolving eureka endpoints via configuration
2022-09-12 16:02:25 - Resolving eureka endpoints via configuration
2022-09-12 16:03:25 - Resolving eureka endpoints via configuration
2022-09-12 16:04:00 - Resolving eureka endpoints via configuration
2022-09-12 16:04:01 - Resolving eureka endpoints via configuration
2022-09-12 16:04:40 - Resolving eureka endpoints via configuration
2022-09-12 16:07:25 - Resolving eureka endpoints via configuration
2022-09-12 16:07:32 - adding user
2022-09-12 16:08:25 - Resolving eureka endpoints via configuration
2022-09-12 16:09:00 - Resolving eureka endpoints via configuration
2022-09-12 16:09:01 - Resolving eureka endpoints via configuration
2022-09-12 16:09:40 - Resolving eureka endpoints via configuration
2022-09-12 16:12:25 - Resolving eureka endpoints via configuration
2022-09-12 16:13:25 - Resolving eureka endpoints via configuration
2022-09-12 16:14:01 - Resolving eureka endpoints via configuration
2022-09-12 16:14:01 - Resolving eureka endpoints via configuration
2022-09-12 16:14:40 - Resolving eureka endpoints via configuration
2022-09-12 16:17:25 - Resolving eureka endpoints via configuration
2022-09-12 16:18:25 - Resolving eureka endpoints via configuration
2022-09-12 16:19:01 - Resolving eureka endpoints via configuration
2022-09-12 16:19:01 - Resolving eureka endpoints via configuration
2022-09-12 16:19:40 - Resolving eureka endpoints via configuration
2022-09-12 16:22:25 - Resolving eureka endpoints via configuration
2022-09-12 16:23:25 - Resolving eureka endpoints via configuration
2022-09-12 16:24:01 - Resolving eureka endpoints via configuration
2022-09-12 16:24:01 - Resolving eureka endpoints via configuration
2022-09-12 16:24:40 - Resolving eureka endpoints via configuration
2022-09-12 16:27:25 - Resolving eureka endpoints via configuration
2022-09-12 16:28:25 - Resolving eureka endpoints via configuration
2022-09-12 16:29:01 - Resolving eureka endpoints via configuration
2022-09-12 16:29:01 - Resolving eureka endpoints via configuration
2022-09-12 16:29:40 - Resolving eureka endpoints via configuration
2022-09-12 16:32:25 - Resolving eureka endpoints via configuration
2022-09-12 16:33:25 - Resolving eureka endpoints via configuration
2022-09-12 16:34:01 - Resolving eureka endpoints via configuration
2022-09-12 16:34:01 - Resolving eureka endpoints via configuration
2022-09-12 16:34:40 - Resolving eureka endpoints via configuration
2022-09-12 16:37:25 - Resolving eureka endpoints via configuration
2022-09-12 16:38:25 - Resolving eureka endpoints via configuration
2022-09-12 16:39:01 - Resolving eureka endpoints via configuration
2022-09-12 16:39:01 - Resolving eureka endpoints via configuration
2022-09-12 16:39:40 - Resolving eureka endpoints via configuration
2022-09-12 16:42:25 - Resolving eureka endpoints via configuration
2022-09-12 16:43:25 - Resolving eureka endpoints via configuration
2022-09-12 16:44:01 - Resolving eureka endpoints via configuration
2022-09-12 16:44:01 - Resolving eureka endpoints via configuration
2022-09-12 16:44:40 - Resolving eureka endpoints via configuration
2022-09-12 16:47:25 - Resolving eureka endpoints via configuration
2022-09-12 16:48:25 - Resolving eureka endpoints via configuration
2022-09-12 16:49:01 - Resolving eureka endpoints via configuration
2022-09-12 16:49:01 - Resolving eureka endpoints via configuration
2022-09-12 16:49:40 - Resolving eureka endpoints via configuration
2022-09-12 16:52:25 - Resolving eureka endpoints via configuration
2022-09-12 16:53:25 - Resolving eureka endpoints via configuration
2022-09-12 16:54:01 - Resolving eureka endpoints via configuration
2022-09-12 16:54:01 - Resolving eureka endpoints via configuration
2022-09-12 16:54:40 - Resolving eureka endpoints via configuration
2022-09-12 16:57:25 - Resolving eureka endpoints via configuration
2022-09-12 16:58:25 - Resolving eureka endpoints via configuration
2022-09-12 16:59:01 - Resolving eureka endpoints via configuration
2022-09-12 16:59:01 - Resolving eureka endpoints via configuration
2022-09-12 16:59:40 - Resolving eureka endpoints via configuration
2022-09-12 17:02:25 - Resolving eureka endpoints via configuration
2022-09-12 17:03:25 - Resolving eureka endpoints via configuration
2022-09-12 17:04:01 - Resolving eureka endpoints via configuration
2022-09-12 17:04:01 - Resolving eureka endpoints via configuration
2022-09-12 17:04:40 - Resolving eureka endpoints via configuration
2022-09-12 17:07:25 - Resolving eureka endpoints via configuration
2022-09-12 17:08:25 - Resolving eureka endpoints via configuration
2022-09-12 17:09:01 - Resolving eureka endpoints via configuration
2022-09-12 17:09:01 - Resolving eureka endpoints via configuration
2022-09-12 17:09:40 - Resolving eureka endpoints via configuration
2022-09-12 17:12:26 - Resolving eureka endpoints via configuration
2022-09-12 17:13:25 - Resolving eureka endpoints via configuration
2022-09-12 17:14:01 - Resolving eureka endpoints via configuration
2022-09-12 17:14:01 - Resolving eureka endpoints via configuration
2022-09-12 17:14:40 - Resolving eureka endpoints via configuration
2022-09-12 17:17:26 - Resolving eureka endpoints via configuration
2022-09-12 17:18:25 - Resolving eureka endpoints via configuration
2022-09-12 17:19:01 - Resolving eureka endpoints via configuration
2022-09-12 17:19:01 - Resolving eureka endpoints via configuration
2022-09-12 17:19:40 - Resolving eureka endpoints via configuration
2022-09-12 17:22:26 - Resolving eureka endpoints via configuration
2022-09-12 17:23:25 - Resolving eureka endpoints via configuration
2022-09-12 17:24:01 - Resolving eureka endpoints via configuration
2022-09-12 17:24:01 - Resolving eureka endpoints via configuration
2022-09-12 17:24:40 - Resolving eureka endpoints via configuration
2022-09-12 17:27:26 - Resolving eureka endpoints via configuration
2022-09-12 17:28:25 - Resolving eureka endpoints via configuration
2022-09-12 17:29:01 - Resolving eureka endpoints via configuration
2022-09-12 17:29:01 - Resolving eureka endpoints via configuration
2022-09-12 17:29:40 - Resolving eureka endpoints via configuration
2022-09-12 17:32:26 - Resolving eureka endpoints via configuration
2022-09-12 17:33:25 - Resolving eureka endpoints via configuration
2022-09-12 17:34:01 - Resolving eureka endpoints via configuration
2022-09-12 17:34:01 - Resolving eureka endpoints via configuration
2022-09-12 17:34:40 - Resolving eureka endpoints via configuration
2022-09-12 17:37:26 - Resolving eureka endpoints via configuration
2022-09-12 17:38:25 - Resolving eureka endpoints via configuration
2022-09-12 17:39:01 - Resolving eureka endpoints via configuration
2022-09-12 17:39:01 - Resolving eureka endpoints via configuration
2022-09-12 17:39:40 - Resolving eureka endpoints via configuration
2022-09-12 17:42:26 - Resolving eureka endpoints via configuration
2022-09-12 17:43:25 - Resolving eureka endpoints via configuration
2022-09-12 17:44:01 - Resolving eureka endpoints via configuration
2022-09-12 17:44:01 - Resolving eureka endpoints via configuration
2022-09-12 17:44:40 - Resolving eureka endpoints via configuration
2022-09-12 17:47:26 - Resolving eureka endpoints via configuration
2022-09-12 17:48:25 - Resolving eureka endpoints via configuration
2022-09-12 17:49:01 - Resolving eureka endpoints via configuration
2022-09-12 17:49:01 - Resolving eureka endpoints via configuration
2022-09-12 17:49:40 - Resolving eureka endpoints via configuration
2022-09-12 17:52:26 - Resolving eureka endpoints via configuration
2022-09-12 17:53:25 - Resolving eureka endpoints via configuration
2022-09-12 17:54:01 - Resolving eureka endpoints via configuration
2022-09-12 17:54:01 - Resolving eureka endpoints via configuration
2022-09-12 17:54:40 - Resolving eureka endpoints via configuration
2022-09-12 17:57:26 - Resolving eureka endpoints via configuration
2022-09-12 17:58:25 - Resolving eureka endpoints via configuration
2022-09-12 17:59:01 - Resolving eureka endpoints via configuration
2022-09-12 17:59:01 - Resolving eureka endpoints via configuration
2022-09-12 17:59:40 - Resolving eureka endpoints via configuration
2022-09-12 18:02:26 - Resolving eureka endpoints via configuration
2022-09-12 18:03:25 - Resolving eureka endpoints via configuration
2022-09-12 18:04:01 - Resolving eureka endpoints via configuration
2022-09-12 18:04:01 - Resolving eureka endpoints via configuration
2022-09-12 18:04:40 - Resolving eureka endpoints via configuration
2022-09-12 18:07:26 - Resolving eureka endpoints via configuration
2022-09-12 18:08:25 - Resolving eureka endpoints via configuration
2022-09-12 18:09:01 - Resolving eureka endpoints via configuration
2022-09-12 18:09:01 - Resolving eureka endpoints via configuration
2022-09-12 18:09:40 - Resolving eureka endpoints via configuration
2022-09-12 18:12:26 - Resolving eureka endpoints via configuration
2022-09-12 18:13:25 - Resolving eureka endpoints via configuration
2022-09-12 18:14:01 - Resolving eureka endpoints via configuration
2022-09-12 18:14:01 - Resolving eureka endpoints via configuration
2022-09-12 18:14:40 - Resolving eureka endpoints via configuration
2022-09-12 18:17:26 - Resolving eureka endpoints via configuration
2022-09-12 18:18:25 - Resolving eureka endpoints via configuration
2022-09-12 18:19:01 - Resolving eureka endpoints via configuration
2022-09-12 18:19:01 - Resolving eureka endpoints via configuration
2022-09-12 18:19:40 - Resolving eureka endpoints via configuration
2022-09-12 18:22:26 - Resolving eureka endpoints via configuration
2022-09-12 18:23:25 - Resolving eureka endpoints via configuration
2022-09-12 18:24:01 - Resolving eureka endpoints via configuration
2022-09-12 18:24:01 - Resolving eureka endpoints via configuration
2022-09-12 18:24:40 - Resolving eureka endpoints via configuration
2022-09-12 18:27:26 - Resolving eureka endpoints via configuration
2022-09-12 18:28:25 - Resolving eureka endpoints via configuration
2022-09-12 18:29:01 - Resolving eureka endpoints via configuration
2022-09-12 18:29:01 - Resolving eureka endpoints via configuration
2022-09-12 18:29:40 - Resolving eureka endpoints via configuration
2022-09-12 18:32:26 - Resolving eureka endpoints via configuration
2022-09-12 18:33:25 - Resolving eureka endpoints via configuration
2022-09-12 18:34:01 - Resolving eureka endpoints via configuration
2022-09-12 18:34:01 - Resolving eureka endpoints via configuration
2022-09-12 18:34:40 - Resolving eureka endpoints via configuration
2022-09-12 18:37:26 - Resolving eureka endpoints via configuration
2022-09-12 18:38:25 - Resolving eureka endpoints via configuration
2022-09-12 18:39:01 - Resolving eureka endpoints via configuration
2022-09-12 18:39:01 - Resolving eureka endpoints via configuration
2022-09-12 18:39:40 - Resolving eureka endpoints via configuration
2022-09-12 18:42:26 - Resolving eureka endpoints via configuration
2022-09-12 18:43:25 - Resolving eureka endpoints via configuration
2022-09-12 18:44:01 - Resolving eureka endpoints via configuration
2022-09-12 18:44:01 - Resolving eureka endpoints via configuration
2022-09-12 18:44:40 - Resolving eureka endpoints via configuration
2022-09-12 18:47:26 - Resolving eureka endpoints via configuration
2022-09-12 18:48:25 - Resolving eureka endpoints via configuration
2022-09-12 18:49:01 - Resolving eureka endpoints via configuration
2022-09-12 18:49:01 - Resolving eureka endpoints via configuration
2022-09-12 18:49:40 - Resolving eureka endpoints via configuration
2022-09-12 19:58:00 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
2022-09-12 19:58:00 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
2022-09-12 19:58:00 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
2022-09-12 19:58:00 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
2022-09-12 19:58:00 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
2022-09-12 19:58:00 - Opened connection [connectionId{localValue:8, serverValue:138}] to localhost:27017
2022-09-12 19:58:00 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=77093900}
2022-09-12 19:58:00 - Opened connection [connectionId{localValue:5, serverValue:142}] to localhost:27017
2022-09-12 19:58:00 - Opened connection [connectionId{localValue:9, serverValue:140}] to localhost:27017
2022-09-12 19:58:00 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=565442200}
2022-09-12 19:58:00 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=569170000}
2022-09-12 19:58:00 - Opened connection [connectionId{localValue:5, serverValue:141}] to localhost:27017
2022-09-12 19:58:00 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=580551000}
2022-09-12 19:58:01 - Opened connection [connectionId{localValue:8, serverValue:139}] to localhost:27017
2022-09-12 19:58:01 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=654992700}
2022-09-12 19:58:08 - Resolving eureka endpoints via configuration
2022-09-12 19:59:08 - Resolving eureka endpoints via configuration
2022-09-12 19:59:43 - Resolving eureka endpoints via configuration
2022-09-12 19:59:43 - Resolving eureka endpoints via configuration
2022-09-12 20:00:22 - Resolving eureka endpoints via configuration
2022-09-12 20:03:08 - Resolving eureka endpoints via configuration
2022-09-12 20:04:08 - Resolving eureka endpoints via configuration
2022-09-12 20:04:43 - Resolving eureka endpoints via configuration
2022-09-12 20:04:43 - Resolving eureka endpoints via configuration
2022-09-12 20:05:22 - Resolving eureka endpoints via configuration
2022-09-12 20:08:08 - Resolving eureka endpoints via configuration
2022-09-12 20:09:08 - Resolving eureka endpoints via configuration
2022-09-12 20:09:43 - Resolving eureka endpoints via configuration
2022-09-12 20:09:43 - Resolving eureka endpoints via configuration
2022-09-12 20:10:22 - Resolving eureka endpoints via configuration
2022-09-12 20:13:08 - Resolving eureka endpoints via configuration
2022-09-12 20:14:08 - Resolving eureka endpoints via configuration
2022-09-12 20:14:43 - Resolving eureka endpoints via configuration
2022-09-12 20:14:43 - Resolving eureka endpoints via configuration
2022-09-12 20:15:22 - Resolving eureka endpoints via configuration
2022-09-12 20:18:08 - Resolving eureka endpoints via configuration
2022-09-12 20:19:08 - Resolving eureka endpoints via configuration
2022-09-12 20:19:43 - Resolving eureka endpoints via configuration
2022-09-12 20:19:43 - Resolving eureka endpoints via configuration
2022-09-12 20:20:22 - Resolving eureka endpoints via configuration
2022-09-12 20:23:08 - Resolving eureka endpoints via configuration
2022-09-12 20:24:08 - Resolving eureka endpoints via configuration
2022-09-12 20:24:43 - Resolving eureka endpoints via configuration
2022-09-12 20:24:44 - Resolving eureka endpoints via configuration
2022-09-12 20:25:22 - Resolving eureka endpoints via configuration
2022-09-12 20:28:08 - Resolving eureka endpoints via configuration
2022-09-12 20:29:08 - Resolving eureka endpoints via configuration
2022-09-12 20:29:43 - Resolving eureka endpoints via configuration
2022-09-12 20:29:44 - Resolving eureka endpoints via configuration
2022-09-12 20:30:22 - Resolving eureka endpoints via configuration
2022-09-12 20:33:08 - Resolving eureka endpoints via configuration
2022-09-12 20:34:08 - Resolving eureka endpoints via configuration
2022-09-12 20:34:43 - Resolving eureka endpoints via configuration
2022-09-12 20:34:44 - Resolving eureka endpoints via configuration
2022-09-12 20:35:22 - Resolving eureka endpoints via configuration
2022-09-12 20:38:08 - Resolving eureka endpoints via configuration
2022-09-12 20:39:08 - Resolving eureka endpoints via configuration
2022-09-12 20:39:43 - Resolving eureka endpoints via configuration
2022-09-12 20:39:44 - Resolving eureka endpoints via configuration
2022-09-12 20:40:22 - Resolving eureka endpoints via configuration
2022-09-12 20:43:08 - Resolving eureka endpoints via configuration
2022-09-12 20:44:08 - Resolving eureka endpoints via configuration
2022-09-12 20:44:43 - Resolving eureka endpoints via configuration
2022-09-12 20:44:44 - Resolving eureka endpoints via configuration
2022-09-12 20:45:22 - Resolving eureka endpoints via configuration
2022-09-12 20:48:08 - Resolving eureka endpoints via configuration
2022-09-12 23:17:26 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
2022-09-12 23:17:26 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
2022-09-12 23:17:26 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
2022-09-12 23:17:26 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
2022-09-12 23:17:26 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
2022-09-12 23:17:26 - Opened connection [connectionId{localValue:9, serverValue:147}] to localhost:27017
2022-09-12 23:17:26 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=181271800}
2022-09-12 23:17:26 - Opened connection [connectionId{localValue:9, serverValue:148}] to localhost:27017
2022-09-12 23:17:26 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=182595400}
2022-09-12 23:17:26 - Opened connection [connectionId{localValue:6, serverValue:145}] to localhost:27017
2022-09-12 23:17:26 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=202636200}
2022-09-12 23:17:26 - Opened connection [connectionId{localValue:6, serverValue:149}] to localhost:27017
2022-09-12 23:17:26 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=205075900}
2022-09-12 23:17:26 - Opened connection [connectionId{localValue:10, serverValue:146}] to localhost:27017
2022-09-12 23:17:26 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=210774300}
2022-09-12 23:35:31 - Resolving eureka endpoints via configuration
2022-09-12 23:36:06 - Resolving eureka endpoints via configuration
2022-09-12 23:36:06 - Resolving eureka endpoints via configuration
2022-09-12 23:36:45 - Resolving eureka endpoints via configuration
2022-09-12 23:39:31 - Resolving eureka endpoints via configuration
2022-09-12 23:40:31 - Resolving eureka endpoints via configuration
2022-09-12 23:41:06 - Resolving eureka endpoints via configuration
2022-09-12 23:41:06 - Resolving eureka endpoints via configuration
2022-09-12 23:41:45 - Resolving eureka endpoints via configuration
2022-09-12 23:44:31 - Resolving eureka endpoints via configuration
2022-09-12 23:45:31 - Resolving eureka endpoints via configuration
2022-09-12 23:46:06 - Resolving eureka endpoints via configuration
2022-09-12 23:46:06 - Resolving eureka endpoints via configuration
2022-09-12 23:46:45 - Resolving eureka endpoints via configuration
2022-09-12 23:49:31 - Resolving eureka endpoints via configuration
2022-09-12 23:50:31 - Resolving eureka endpoints via configuration
2022-09-12 23:51:06 - Resolving eureka endpoints via configuration
2022-09-12 23:51:06 - Resolving eureka endpoints via configuration
2022-09-12 23:51:45 - Resolving eureka endpoints via configuration
2022-09-12 23:54:31 - Resolving eureka endpoints via configuration
2022-09-12 23:55:31 - Resolving eureka endpoints via configuration
2022-09-12 23:56:06 - Resolving eureka endpoints via configuration
2022-09-12 23:56:06 - Resolving eureka endpoints via configuration
2022-09-12 23:56:45 - Resolving eureka endpoints via configuration
2022-09-12 23:59:31 - Resolving eureka endpoints via configuration
2022-09-13 00:00:31 - Resolving eureka endpoints via configuration
2022-09-13 00:01:06 - Resolving eureka endpoints via configuration
2022-09-13 00:01:06 - Resolving eureka endpoints via configuration
2022-09-13 00:01:45 - Resolving eureka endpoints via configuration
2022-09-13 00:04:31 - Resolving eureka endpoints via configuration
2022-09-13 00:05:31 - Resolving eureka endpoints via configuration
2022-09-13 00:06:06 - Resolving eureka endpoints via configuration
2022-09-13 00:06:06 - Resolving eureka endpoints via configuration
2022-09-13 00:06:45 - Resolving eureka endpoints via configuration
2022-09-13 00:09:31 - Resolving eureka endpoints via configuration
2022-09-13 00:10:31 - Resolving eureka endpoints via configuration
2022-09-13 00:11:06 - Resolving eureka endpoints via configuration
2022-09-13 00:11:06 - Resolving eureka endpoints via configuration
2022-09-13 00:11:45 - Resolving eureka endpoints via configuration
2022-09-13 00:14:31 - Resolving eureka endpoints via configuration
2022-09-13 00:15:31 - Resolving eureka endpoints via configuration
2022-09-13 00:16:06 - Resolving eureka endpoints via configuration
2022-09-13 00:16:06 - Resolving eureka endpoints via configuration
2022-09-13 00:16:45 - Resolving eureka endpoints via configuration
2022-09-13 00:19:31 - Resolving eureka endpoints via configuration
2022-09-13 00:20:31 - Resolving eureka endpoints via configuration
2022-09-13 00:21:06 - Resolving eureka endpoints via configuration
2022-09-13 00:21:06 - Resolving eureka endpoints via configuration
2022-09-13 00:21:45 - Resolving eureka endpoints via configuration
2022-09-13 00:24:31 - Resolving eureka endpoints via configuration
2022-09-13 00:25:31 - Resolving eureka endpoints via configuration
2022-09-13 00:26:06 - Resolving eureka endpoints via configuration
2022-09-13 00:26:06 - Resolving eureka endpoints via configuration
2022-09-13 00:26:45 - Resolving eureka endpoints via configuration
2022-09-13 00:29:31 - Resolving eureka endpoints via configuration
2022-09-13 00:30:31 - Resolving eureka endpoints via configuration
2022-09-13 00:31:06 - Resolving eureka endpoints via configuration
2022-09-13 00:31:06 - Resolving eureka endpoints via configuration
2022-09-13 00:31:45 - Resolving eureka endpoints via configuration
2022-09-13 00:34:31 - Resolving eureka endpoints via configuration
2022-09-13 00:35:31 - Resolving eureka endpoints via configuration
2022-09-13 00:36:06 - Resolving eureka endpoints via configuration
2022-09-13 00:36:06 - Resolving eureka endpoints via configuration
2022-09-13 00:36:45 - Resolving eureka endpoints via configuration
2022-09-13 00:39:31 - Resolving eureka endpoints via configuration
2022-09-13 00:40:31 - Resolving eureka endpoints via configuration
2022-09-13 00:41:06 - Resolving eureka endpoints via configuration
2022-09-13 00:41:06 - Resolving eureka endpoints via configuration
2022-09-13 00:41:45 - Resolving eureka endpoints via configuration
2022-09-13 00:44:31 - Resolving eureka endpoints via configuration
2022-09-13 00:44:37 - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/BOOKING-SERVICE/inlen8520018489.corp.capgemini.com:booking-service:8002": Connection reset; nested exception is java.net.SocketException: Connection reset stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/BOOKING-SERVICE/inlen8520018489.corp.capgemini.com:booking-service:8002": Connection reset; nested exception is java.net.SocketException: Connection reset
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.SocketException: Connection reset
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:186)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	... 19 more

2022-09-13 00:44:37 - Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/BOOKING-SERVICE/inlen8520018489.corp.capgemini.com:booking-service:8002": Connection reset; nested exception is java.net.SocketException: Connection reset
2022-09-13 11:25:30 - Starting FlightApplication using Java 11.0.12 on inlen8520018489 with PID 4948 (C:\Users\ASHAIK31\FlightBookingSystem\flight\target\classes started by ashaik31 in C:\Users\ASHAIK31\FlightBookingSystem\service-discovery)
2022-09-13 11:25:30 - No active profile set, falling back to 1 default profile: "default"
2022-09-13 11:25:31 - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2022-09-13 11:25:32 - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-09-13 11:25:32 - Finished Spring Data repository scanning in 302 ms. Found 0 Reactive MongoDB repository interfaces.
2022-09-13 11:25:32 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-09-13 11:25:32 - Finished Spring Data repository scanning in 40 ms. Found 1 MongoDB repository interfaces.
2022-09-13 11:25:33 - BeanFactory id=76207517-9e5e-3bce-8411-f105bcee2839
2022-09-13 11:25:34 - Tomcat initialized with port(s): 8001 (http)
2022-09-13 11:25:34 - Starting service [Tomcat]
2022-09-13 11:25:34 - Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-13 11:25:34 - Initializing Spring embedded WebApplicationContext
2022-09-13 11:25:34 - Root WebApplicationContext: initialization completed in 4456 ms
2022-09-13 11:25:35 - No URLs will be polled as dynamic configuration sources.
2022-09-13 11:25:35 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-13 11:25:35 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@734a149a
2022-09-13 11:25:35 - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2022-09-13 11:25:35 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@1c53bd49], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@16949dfa]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@d6d683e], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-13 11:25:35 - Opened connection [connectionId{localValue:2, serverValue:17}] to localhost:27017
2022-09-13 11:25:35 - Opened connection [connectionId{localValue:1, serverValue:16}] to localhost:27017
2022-09-13 11:25:35 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43299100}
2022-09-13 11:25:36 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-13 11:25:36 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-13 11:25:36 - No URLs will be polled as dynamic configuration sources.
2022-09-13 11:25:36 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-13 11:25:39 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@1c53bd49], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@16949dfa]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@d6d683e], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-13 11:25:39 - Opened connection [connectionId{localValue:4, serverValue:18}] to localhost:27017
2022-09-13 11:25:39 - Opened connection [connectionId{localValue:3, serverValue:19}] to localhost:27017
2022-09-13 11:25:39 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=11179000}
2022-09-13 11:25:39 - Eureka HTTP Client uses RestTemplate.
2022-09-13 11:25:40 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-09-13 11:25:40 - Exposing 1 endpoint(s) beneath base path '/actuator'
2022-09-13 11:25:40 - Setting initial instance status as: STARTING
2022-09-13 11:25:40 - Initializing Eureka in region us-east-1
2022-09-13 11:25:40 - Resolving eureka endpoints via configuration
2022-09-13 11:25:40 - Disable delta property : false
2022-09-13 11:25:40 - Single vip registry refresh property : null
2022-09-13 11:25:40 - Force full registry fetch : false
2022-09-13 11:25:40 - Application is null : false
2022-09-13 11:25:40 - Registered Applications size is zero : true
2022-09-13 11:25:40 - Application version is -1: true
2022-09-13 11:25:40 - Getting all instance registry info from the eureka server
2022-09-13 11:25:41 - The response status is 200
2022-09-13 11:25:41 - Starting heartbeat executor: renew interval is: 30
2022-09-13 11:25:41 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-09-13 11:25:41 - Discovery Client initialized at timestamp 1663048541617 with initial instances count: 0
2022-09-13 11:25:41 - Registering application FLIGHT-SERVICE with eureka with status UP
2022-09-13 11:25:41 - Saw local status change event StatusChangeEvent [timestamp=1663048541625, current=UP, previous=STARTING]
2022-09-13 11:25:41 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001: registering service...
2022-09-13 11:25:41 - Tomcat started on port(s): 8001 (http) with context path ''
2022-09-13 11:25:41 - Updating port to 8001
2022-09-13 11:25:41 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - registration status: 204
2022-09-13 11:25:42 - Started FlightApplication in 13.355 seconds (JVM running for 14.455)
2022-09-13 11:26:11 - Disable delta property : false
2022-09-13 11:26:11 - Single vip registry refresh property : null
2022-09-13 11:26:11 - Force full registry fetch : false
2022-09-13 11:26:11 - Application is null : false
2022-09-13 11:26:11 - Registered Applications size is zero : true
2022-09-13 11:26:11 - Application version is -1: false
2022-09-13 11:26:11 - Getting all instance registry info from the eureka server
2022-09-13 11:26:11 - The response status is 200
2022-09-13 11:27:56 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-13 11:27:56 - Initializing Servlet 'dispatcherServlet'
2022-09-13 11:27:56 - Completed initialization in 3 ms
2022-09-13 11:27:57 - Init duration for springdoc-openapi is: 389 ms
2022-09-13 11:28:31 - Opened connection [connectionId{localValue:5, serverValue:20}] to localhost:27017
2022-09-13 11:30:08 - Starting FlightApplication using Java 11.0.12 on inlen8520018489 with PID 28688 (C:\Users\ASHAIK31\FlightBookingSystem\flight\target\classes started by ashaik31 in C:\Users\ASHAIK31\FlightBookingSystem\service-discovery)
2022-09-13 11:30:08 - No active profile set, falling back to 1 default profile: "default"
2022-09-13 11:30:09 - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2022-09-13 11:30:10 - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-09-13 11:30:10 - Finished Spring Data repository scanning in 261 ms. Found 0 Reactive MongoDB repository interfaces.
2022-09-13 11:30:10 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-09-13 11:30:10 - Finished Spring Data repository scanning in 34 ms. Found 1 MongoDB repository interfaces.
2022-09-13 11:30:11 - BeanFactory id=76207517-9e5e-3bce-8411-f105bcee2839
2022-09-13 11:30:12 - Tomcat initialized with port(s): 8001 (http)
2022-09-13 11:30:12 - Starting service [Tomcat]
2022-09-13 11:30:12 - Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-13 11:30:12 - Initializing Spring embedded WebApplicationContext
2022-09-13 11:30:12 - Root WebApplicationContext: initialization completed in 4140 ms
2022-09-13 11:30:12 - No URLs will be polled as dynamic configuration sources.
2022-09-13 11:30:12 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-13 11:30:13 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1231a1be
2022-09-13 11:30:13 - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2022-09-13 11:30:13 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@54f373d4], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1c53bd49]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@16949dfa], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-13 11:30:13 - Opened connection [connectionId{localValue:2, serverValue:22}] to localhost:27017
2022-09-13 11:30:13 - Opened connection [connectionId{localValue:1, serverValue:21}] to localhost:27017
2022-09-13 11:30:13 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=36644500}
2022-09-13 11:30:13 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-13 11:30:14 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-13 11:30:14 - No URLs will be polled as dynamic configuration sources.
2022-09-13 11:30:14 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-13 11:30:16 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@54f373d4], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1c53bd49]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@16949dfa], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-13 11:30:16 - Opened connection [connectionId{localValue:4, serverValue:24}] to localhost:27017
2022-09-13 11:30:16 - Opened connection [connectionId{localValue:3, serverValue:23}] to localhost:27017
2022-09-13 11:30:16 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=10941100}
2022-09-13 11:30:17 - Eureka HTTP Client uses RestTemplate.
2022-09-13 11:30:17 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-09-13 11:30:17 - Exposing 1 endpoint(s) beneath base path '/actuator'
2022-09-13 11:30:17 - Setting initial instance status as: STARTING
2022-09-13 11:30:18 - Initializing Eureka in region us-east-1
2022-09-13 11:30:18 - Resolving eureka endpoints via configuration
2022-09-13 11:30:18 - Disable delta property : false
2022-09-13 11:30:18 - Single vip registry refresh property : null
2022-09-13 11:30:18 - Force full registry fetch : false
2022-09-13 11:30:18 - Application is null : false
2022-09-13 11:30:18 - Registered Applications size is zero : true
2022-09-13 11:30:18 - Application version is -1: true
2022-09-13 11:30:18 - Getting all instance registry info from the eureka server
2022-09-13 11:30:18 - The response status is 200
2022-09-13 11:30:18 - Starting heartbeat executor: renew interval is: 30
2022-09-13 11:30:18 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-09-13 11:30:18 - Discovery Client initialized at timestamp 1663048818843 with initial instances count: 1
2022-09-13 11:30:18 - Registering application FLIGHT-SERVICE with eureka with status UP
2022-09-13 11:30:18 - Saw local status change event StatusChangeEvent [timestamp=1663048818851, current=UP, previous=STARTING]
2022-09-13 11:30:18 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001: registering service...
2022-09-13 11:30:18 - Tomcat started on port(s): 8001 (http) with context path ''
2022-09-13 11:30:18 - Updating port to 8001
2022-09-13 11:30:18 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - registration status: 204
2022-09-13 11:30:19 - Started FlightApplication in 12.479 seconds (JVM running for 13.586)
2022-09-13 11:30:33 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-13 11:30:33 - Initializing Servlet 'dispatcherServlet'
2022-09-13 11:30:33 - Completed initialization in 2 ms
2022-09-13 11:30:33 - Init duration for springdoc-openapi is: 379 ms
2022-09-13 11:30:38 - Opened connection [connectionId{localValue:5, serverValue:25}] to localhost:27017
2022-09-13 11:35:18 - Resolving eureka endpoints via configuration
2022-09-13 11:40:18 - Resolving eureka endpoints via configuration
2022-09-13 11:45:18 - Resolving eureka endpoints via configuration
2022-09-13 11:50:18 - Resolving eureka endpoints via configuration
2022-09-13 11:55:18 - Resolving eureka endpoints via configuration
2022-09-13 11:59:51 - Starting FlightApplication using Java 11.0.12 on inlen8520018489 with PID 28848 (C:\Users\ASHAIK31\FlightBookingSystem\flight\target\classes started by ashaik31 in C:\Users\ASHAIK31\FlightBookingSystem\service-discovery)
2022-09-13 11:59:51 - No active profile set, falling back to 1 default profile: "default"
2022-09-13 11:59:52 - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2022-09-13 11:59:53 - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-09-13 11:59:53 - Finished Spring Data repository scanning in 262 ms. Found 0 Reactive MongoDB repository interfaces.
2022-09-13 11:59:53 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-09-13 11:59:53 - Finished Spring Data repository scanning in 30 ms. Found 1 MongoDB repository interfaces.
2022-09-13 11:59:54 - BeanFactory id=76207517-9e5e-3bce-8411-f105bcee2839
2022-09-13 11:59:55 - Tomcat initialized with port(s): 8001 (http)
2022-09-13 11:59:55 - Starting service [Tomcat]
2022-09-13 11:59:55 - Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-13 11:59:55 - Initializing Spring embedded WebApplicationContext
2022-09-13 11:59:55 - Root WebApplicationContext: initialization completed in 4018 ms
2022-09-13 11:59:55 - No URLs will be polled as dynamic configuration sources.
2022-09-13 11:59:55 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-13 11:59:56 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@690df641
2022-09-13 11:59:56 - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2022-09-13 11:59:56 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@6785df10], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@144440f5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@3e2c8ef], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-13 11:59:56 - Opened connection [connectionId{localValue:2, serverValue:26}] to localhost:27017
2022-09-13 11:59:56 - Opened connection [connectionId{localValue:1, serverValue:27}] to localhost:27017
2022-09-13 11:59:56 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42697500}
2022-09-13 11:59:56 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-13 11:59:57 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-13 11:59:57 - No URLs will be polled as dynamic configuration sources.
2022-09-13 11:59:57 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-13 11:59:59 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@6785df10], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@144440f5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@3e2c8ef], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-13 11:59:59 - Opened connection [connectionId{localValue:4, serverValue:29}] to localhost:27017
2022-09-13 11:59:59 - Opened connection [connectionId{localValue:3, serverValue:28}] to localhost:27017
2022-09-13 11:59:59 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=10282700}
2022-09-13 12:00:00 - Eureka HTTP Client uses RestTemplate.
2022-09-13 12:00:00 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-09-13 12:00:00 - Exposing 1 endpoint(s) beneath base path '/actuator'
2022-09-13 12:00:01 - Setting initial instance status as: STARTING
2022-09-13 12:00:01 - Initializing Eureka in region us-east-1
2022-09-13 12:00:01 - Resolving eureka endpoints via configuration
2022-09-13 12:00:01 - Disable delta property : false
2022-09-13 12:00:01 - Single vip registry refresh property : null
2022-09-13 12:00:01 - Force full registry fetch : false
2022-09-13 12:00:01 - Application is null : false
2022-09-13 12:00:01 - Registered Applications size is zero : true
2022-09-13 12:00:01 - Application version is -1: true
2022-09-13 12:00:01 - Getting all instance registry info from the eureka server
2022-09-13 12:00:01 - The response status is 200
2022-09-13 12:00:01 - Starting heartbeat executor: renew interval is: 30
2022-09-13 12:00:01 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-09-13 12:00:01 - Discovery Client initialized at timestamp 1663050601848 with initial instances count: 1
2022-09-13 12:00:01 - Registering application FLIGHT-SERVICE with eureka with status UP
2022-09-13 12:00:01 - Saw local status change event StatusChangeEvent [timestamp=1663050601857, current=UP, previous=STARTING]
2022-09-13 12:00:01 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001: registering service...
2022-09-13 12:00:01 - Tomcat started on port(s): 8001 (http) with context path ''
2022-09-13 12:00:01 - Updating port to 8001
2022-09-13 12:00:01 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - registration status: 204
2022-09-13 12:00:02 - Started FlightApplication in 12.379 seconds (JVM running for 13.418)
2022-09-13 12:01:33 - Starting FlightApplication using Java 11.0.12 on inlen8520018489 with PID 5776 (C:\Users\ASHAIK31\FlightBookingSystem\flight\target\classes started by ashaik31 in C:\Users\ASHAIK31\FlightBookingSystem\service-discovery)
2022-09-13 12:01:33 - No active profile set, falling back to 1 default profile: "default"
2022-09-13 12:01:33 - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2022-09-13 12:01:34 - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-09-13 12:01:35 - Finished Spring Data repository scanning in 257 ms. Found 0 Reactive MongoDB repository interfaces.
2022-09-13 12:01:35 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-09-13 12:01:35 - Finished Spring Data repository scanning in 31 ms. Found 1 MongoDB repository interfaces.
2022-09-13 12:01:35 - BeanFactory id=76207517-9e5e-3bce-8411-f105bcee2839
2022-09-13 12:01:37 - Tomcat initialized with port(s): 8001 (http)
2022-09-13 12:01:37 - Starting service [Tomcat]
2022-09-13 12:01:37 - Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-13 12:01:37 - Initializing Spring embedded WebApplicationContext
2022-09-13 12:01:37 - Root WebApplicationContext: initialization completed in 4127 ms
2022-09-13 12:01:37 - No URLs will be polled as dynamic configuration sources.
2022-09-13 12:01:37 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-13 12:01:37 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@36f6d25c
2022-09-13 12:01:37 - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2022-09-13 12:01:38 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@507f47f9], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6785df10]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@144440f5], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-13 12:01:38 - Opened connection [connectionId{localValue:1, serverValue:30}] to localhost:27017
2022-09-13 12:01:38 - Opened connection [connectionId{localValue:2, serverValue:31}] to localhost:27017
2022-09-13 12:01:38 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44558800}
2022-09-13 12:01:38 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-13 12:01:38 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-13 12:01:39 - No URLs will be polled as dynamic configuration sources.
2022-09-13 12:01:39 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-13 12:01:41 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@507f47f9], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6785df10]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@144440f5], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-13 12:01:41 - Opened connection [connectionId{localValue:4, serverValue:32}] to localhost:27017
2022-09-13 12:01:41 - Opened connection [connectionId{localValue:3, serverValue:33}] to localhost:27017
2022-09-13 12:01:41 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=13402000}
2022-09-13 12:01:42 - Eureka HTTP Client uses RestTemplate.
2022-09-13 12:01:42 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-09-13 12:01:42 - Exposing 1 endpoint(s) beneath base path '/actuator'
2022-09-13 12:01:42 - Setting initial instance status as: STARTING
2022-09-13 12:01:43 - Initializing Eureka in region us-east-1
2022-09-13 12:01:43 - Resolving eureka endpoints via configuration
2022-09-13 12:01:43 - Disable delta property : false
2022-09-13 12:01:43 - Single vip registry refresh property : null
2022-09-13 12:01:43 - Force full registry fetch : false
2022-09-13 12:01:43 - Application is null : false
2022-09-13 12:01:43 - Registered Applications size is zero : true
2022-09-13 12:01:43 - Application version is -1: true
2022-09-13 12:01:43 - Getting all instance registry info from the eureka server
2022-09-13 12:01:43 - The response status is 200
2022-09-13 12:01:43 - Starting heartbeat executor: renew interval is: 30
2022-09-13 12:01:43 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-09-13 12:01:43 - Discovery Client initialized at timestamp 1663050703743 with initial instances count: 1
2022-09-13 12:01:43 - Registering application FLIGHT-SERVICE with eureka with status UP
2022-09-13 12:01:43 - Saw local status change event StatusChangeEvent [timestamp=1663050703752, current=UP, previous=STARTING]
2022-09-13 12:01:43 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001: registering service...
2022-09-13 12:01:43 - Tomcat started on port(s): 8001 (http) with context path ''
2022-09-13 12:01:43 - Updating port to 8001
2022-09-13 12:01:43 - DiscoveryClient_FLIGHT-SERVICE/inlen8520018489.corp.capgemini.com:flight-service:8001 - registration status: 204
2022-09-13 12:01:44 - Started FlightApplication in 12.709 seconds (JVM running for 13.844)
2022-09-13 12:02:05 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-13 12:02:05 - Initializing Servlet 'dispatcherServlet'
2022-09-13 12:02:05 - Completed initialization in 2 ms
2022-09-13 12:02:05 - Init duration for springdoc-openapi is: 363 ms
2022-09-13 12:02:18 - Opened connection [connectionId{localValue:5, serverValue:34}] to localhost:27017
2022-09-13 12:06:43 - Resolving eureka endpoints via configuration
2022-09-13 12:11:43 - Resolving eureka endpoints via configuration
2022-09-13 12:16:43 - Resolving eureka endpoints via configuration
2022-09-13 12:21:43 - Resolving eureka endpoints via configuration
2022-09-13 12:26:43 - Resolving eureka endpoints via configuration
2022-09-13 12:31:43 - Resolving eureka endpoints via configuration
2022-09-13 12:36:43 - Resolving eureka endpoints via configuration
2022-09-13 12:41:43 - Resolving eureka endpoints via configuration
2022-09-13 12:46:43 - Resolving eureka endpoints via configuration
2022-09-13 12:51:43 - Resolving eureka endpoints via configuration
2022-09-13 12:56:43 - Resolving eureka endpoints via configuration
2022-09-13 13:01:43 - Resolving eureka endpoints via configuration
2022-09-13 13:06:43 - Resolving eureka endpoints via configuration
2022-09-13 13:11:43 - Resolving eureka endpoints via configuration
2022-09-13 13:12:06 - Starting FareApplication using Java 11.0.12 on inlen8520018489 with PID 30384 (C:\Users\ASHAIK31\FlightBookingSystem\fare\target\classes started by ashaik31 in C:\Users\ASHAIK31\FlightBookingSystem\service-discovery)
2022-09-13 13:12:06 - No active profile set, falling back to 1 default profile: "default"
2022-09-13 13:12:07 - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2022-09-13 13:12:08 - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-09-13 13:12:08 - Finished Spring Data repository scanning in 286 ms. Found 0 Reactive MongoDB repository interfaces.
2022-09-13 13:12:08 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-09-13 13:12:08 - Finished Spring Data repository scanning in 34 ms. Found 1 MongoDB repository interfaces.
2022-09-13 13:12:09 - BeanFactory id=ae6905fd-007e-300b-aa30-bbc83157d222
2022-09-13 13:12:10 - Tomcat initialized with port(s): 8003 (http)
2022-09-13 13:12:10 - Starting service [Tomcat]
2022-09-13 13:12:10 - Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-13 13:12:10 - Initializing Spring embedded WebApplicationContext
2022-09-13 13:12:10 - Root WebApplicationContext: initialization completed in 4132 ms
2022-09-13 13:12:10 - No URLs will be polled as dynamic configuration sources.
2022-09-13 13:12:10 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-13 13:12:10 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@40f9f60d
2022-09-13 13:12:11 - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2022-09-13 13:12:11 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@13390a96], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3a8b9458]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@7497a554], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-13 13:12:11 - Opened connection [connectionId{localValue:1, serverValue:35}] to localhost:27017
2022-09-13 13:12:11 - Opened connection [connectionId{localValue:2, serverValue:36}] to localhost:27017
2022-09-13 13:12:11 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41357900}
2022-09-13 13:12:11 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-13 13:12:11 - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2022-09-13 13:12:12 - No URLs will be polled as dynamic configuration sources.
2022-09-13 13:12:12 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-09-13 13:12:14 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@13390a96], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3a8b9458]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@7497a554], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-09-13 13:12:14 - Opened connection [connectionId{localValue:4, serverValue:37}] to localhost:27017
2022-09-13 13:12:14 - Opened connection [connectionId{localValue:3, serverValue:38}] to localhost:27017
2022-09-13 13:12:14 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=11655300}
2022-09-13 13:12:15 - Eureka HTTP Client uses RestTemplate.
2022-09-13 13:12:15 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-09-13 13:12:15 - Exposing 1 endpoint(s) beneath base path '/actuator'
2022-09-13 13:12:16 - Setting initial instance status as: STARTING
2022-09-13 13:12:16 - Initializing Eureka in region us-east-1
2022-09-13 13:12:16 - Resolving eureka endpoints via configuration
2022-09-13 13:12:16 - Disable delta property : false
2022-09-13 13:12:16 - Single vip registry refresh property : null
2022-09-13 13:12:16 - Force full registry fetch : false
2022-09-13 13:12:16 - Application is null : false
2022-09-13 13:12:16 - Registered Applications size is zero : true
2022-09-13 13:12:16 - Application version is -1: true
2022-09-13 13:12:16 - Getting all instance registry info from the eureka server
2022-09-13 13:12:16 - The response status is 200
2022-09-13 13:12:16 - Starting heartbeat executor: renew interval is: 30
2022-09-13 13:12:16 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-09-13 13:12:16 - Discovery Client initialized at timestamp 1663054936947 with initial instances count: 1
2022-09-13 13:12:16 - Registering application FARE-SERVICE with eureka with status UP
2022-09-13 13:12:16 - Saw local status change event StatusChangeEvent [timestamp=1663054936955, current=UP, previous=STARTING]
2022-09-13 13:12:16 - DiscoveryClient_FARE-SERVICE/inlen8520018489.corp.capgemini.com:fare-service:8003: registering service...
2022-09-13 13:12:16 - Tomcat started on port(s): 8003 (http) with context path ''
2022-09-13 13:12:17 - Updating port to 8003
2022-09-13 13:12:17 - DiscoveryClient_FARE-SERVICE/inlen8520018489.corp.capgemini.com:fare-service:8003 - registration status: 204
2022-09-13 13:12:17 - Started FareApplication in 12.656 seconds (JVM running for 13.761)
2022-09-13 13:16:43 - Resolving eureka endpoints via configuration
2022-09-13 13:17:16 - Resolving eureka endpoints via configuration
2022-09-13 13:21:43 - Resolving eureka endpoints via configuration
2022-09-13 13:22:16 - Resolving eureka endpoints via configuration
2022-09-13 13:26:43 - Resolving eureka endpoints via configuration
2022-09-13 13:27:16 - Resolving eureka endpoints via configuration
